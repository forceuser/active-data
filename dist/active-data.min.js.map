{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///active-data.min.js","webpack:///webpack/bootstrap 39d7906618c6047b88f2?bb74","webpack:///./src/index.js?9552","webpack:///./src/cjs-entry.js?112a"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","_classCallCheck","instance","Constructor","TypeError","Manager","_createClass","defineProperties","target","props","length","descriptor","writable","key","protoProps","staticProps","options","$isObservableSymbol","Symbol","$registerRead","$dataSource","observables","WeakMap","cache","enabled","immediateReaction","callStack","reactions","setOptions","arguments","undefined","assign","makeObservable","dataSource","manager","isObservable","observable","toUpdate","Map","invalidateDeps","record","valid","deps","forEach","clear","registerRead","obj","records","Set","set","add","proto","getPrototypeOf","observableProto","Proxy","val","Error","Array","isArray","console","log","delete","inRunSection","run","runDeferred","makeUpdatable","cacheByObject","computing","warn","push","context","pop","makeComputed","callOnGet","callOnSet","makeReaction","updatable","unregister","idx","indexOf","splice","reaction","action","runScheduled","onAfterRun","_this","setTimeout","default"],"mappings":"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","file":"active-data.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"activeData\"] = factory();\n\telse\n\t\troot[\"activeData\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"activeData\"] = factory();\n\telse\n\t\troot[\"activeData\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Manager\", function() { return Manager; });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n* Реактивный менеджер данных, следящий за изменениями данных и выполняющий действия в ответ на эти изменения\n* Отслеживание происходит лениво, данные обновляются только когда они требуются\n*\n* @param {ManagerOptions} [options] Настройки менеджера\n*/\nvar Manager = function () {\n\tfunction Manager(options) {\n\t\t_classCallCheck(this, Manager);\n\n\t\tthis.$isObservableSymbol = Symbol(\"isObservable\");\n\t\tthis.$registerRead = Symbol(\"registerRead\");\n\t\tthis.$dataSource = Symbol(\"dataSource\");\n\t\tthis.observables = new WeakMap();\n\t\tthis.cache = new WeakMap();\n\t\tthis.options = {\n\t\t\tenabled: true,\n\t\t\timmediateReaction: false\n\t\t};\n\t\tthis.callStack = [];\n\t\tthis.reactions = [];\n\t\tthis.setOptions(options);\n\t}\n\t/**\n * Динамически устанавливает настройки работы менеджера данных\n *\n * @param {ManagerOptions} [options] Настройки менеджера\n */\n\n\n\t_createClass(Manager, [{\n\t\tkey: \"setOptions\",\n\t\tvalue: function setOptions() {\n\t\t\tvar options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n\t\t\tthis.options = Object.assign(this.options, options);\n\t\t}\n\t\t/**\n  * Создает {@link Observable} объект для указанного источника данный\n  *\n  * @param {(Object|Array)} dataSource источник данных\n  * @return {Observable} отслеживаемый объект\n  */\n\n\t}, {\n\t\tkey: \"makeObservable\",\n\t\tvalue: function makeObservable(dataSource) {\n\t\t\tvar manager = this;\n\t\t\tif (!dataSource) {\n\t\t\t\treturn dataSource;\n\t\t\t}\n\t\t\tif (this.isObservable(dataSource)) {\n\t\t\t\treturn dataSource;\n\t\t\t}\n\t\t\tvar observable = manager.observables.get(dataSource);\n\t\t\tif (!observable) {\n\t\t\t\tvar toUpdate = new Map();\n\t\t\t\tvar invalidateDeps = function invalidateDeps(record) {\n\t\t\t\t\trecord.valid = false;\n\t\t\t\t\trecord.deps.forEach(function (record) {\n\t\t\t\t\t\treturn invalidateDeps(record);\n\t\t\t\t\t});\n\t\t\t\t\trecord.deps.clear();\n\t\t\t\t};\n\n\t\t\t\tvar registerRead = function registerRead(record, obj, key) {\n\t\t\t\t\tvar records = toUpdate.get(key);\n\t\t\t\t\tif (!records) {\n\t\t\t\t\t\trecords = new Set();\n\t\t\t\t\t\ttoUpdate.set(key, records);\n\t\t\t\t\t}\n\n\t\t\t\t\trecords.add(record);\n\n\t\t\t\t\tvar proto = Object.getPrototypeOf(obj);\n\t\t\t\t\twhile (proto != null) {\n\t\t\t\t\t\tvar observableProto = manager.observables.get(proto);\n\t\t\t\t\t\tif (observableProto != null) {\n\t\t\t\t\t\t\tobservableProto[manager.$registerRead](record, observableProto[manager.$dataSource], key);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tproto = Object.getPrototypeOf(proto);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tobservable = new Proxy(dataSource, {\n\t\t\t\t\tget: function get(obj, key) {\n\t\t\t\t\t\tif (key === manager.$isObservableSymbol) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (key === manager.$dataSource) {\n\t\t\t\t\t\t\treturn dataSource;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (manager.callStack.length) {\n\t\t\t\t\t\t\tif (key === manager.$registerRead) {\n\t\t\t\t\t\t\t\treturn registerRead;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tregisterRead(manager.callStack[manager.callStack.length - 1].record, obj, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar val = obj[key];\n\t\t\t\t\t\tif (val === Object(val) && typeof val !== \"function\") {\n\t\t\t\t\t\t\treturn manager.makeObservable(val);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn val;\n\t\t\t\t\t},\n\t\t\t\t\tset: function set(obj, key, val) {\n\t\t\t\t\t\tif (manager.callStack && manager.callStack.length) {\n\t\t\t\t\t\t\tthrow new Error(\"Changing observable objects is restricted inside computed properties and reaction functions!\");\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (val !== obj[key] || Array.isArray(obj) && key === \"length\") {\n\t\t\t\t\t\t\tobj[key] = val;\n\t\t\t\t\t\t\tvar records = toUpdate.get(key);\n\t\t\t\t\t\t\tconsole.log(\"records\", records);\n\t\t\t\t\t\t\tif (records) {\n\t\t\t\t\t\t\t\trecords.forEach(function (record) {\n\t\t\t\t\t\t\t\t\treturn invalidateDeps(record);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\ttoUpdate.delete(key);\n\t\t\t\t\t\t\tif (!manager.inRunSection) {\n\t\t\t\t\t\t\t\tif (manager.options.immediateReaction) {\n\t\t\t\t\t\t\t\t\tmanager.run();\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tmanager.runDeferred();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tmanager.observables.set(dataSource, observable);\n\t\t\t}\n\t\t\treturn observable;\n\t\t}\n\t\t/**\n  * Создает {@link UpdatableFunction}\n  * Используется в основном для внутренних целей\n  *\n  * @param {Function} call Функция для которой будет создана {@link UpdatableFunction}\n  * @param {Object} obj Если `call` это метод объекта необходимо указать связанный объект\n  * @return {UpdatableFunction}\n  */\n\n\t}, {\n\t\tkey: \"makeUpdatable\",\n\t\tvalue: function makeUpdatable(call) {\n\t\t\tvar obj = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n\t\t\tvar manager = this;\n\t\t\tif (obj == null) {\n\t\t\t\tobj = manager;\n\t\t\t}\n\t\t\treturn function () {\n\t\t\t\tvar cacheByObject = manager.cache.get(obj);\n\t\t\t\tvar record = void 0;\n\t\t\t\tif (cacheByObject) {\n\t\t\t\t\trecord = cacheByObject.get(call);\n\t\t\t\t} else {\n\t\t\t\t\tcacheByObject = new Map();\n\t\t\t\t\tmanager.cache.set(obj, cacheByObject);\n\t\t\t\t}\n\n\t\t\t\tif (!record) {\n\t\t\t\t\trecord = { valid: false, value: undefined, deps: new Set() };\n\t\t\t\t\tcacheByObject.set(call, record);\n\t\t\t\t}\n\t\t\t\tif (record.computing) {\n\t\t\t\t\tconsole.warn(\"Detected cross reference inside computed properties! undefined will be returned to prevent infinite loop\");\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\tif (manager.callStack.length) {\n\t\t\t\t\trecord.deps.add(manager.callStack[manager.callStack.length - 1].record);\n\t\t\t\t}\n\n\t\t\t\tif (record.valid) {\n\t\t\t\t\treturn record.value;\n\t\t\t\t}\n\t\t\t\trecord.computing = true;\n\t\t\t\tmanager.callStack.push({ obj: obj, call: call, record: record });\n\t\t\t\ttry {\n\t\t\t\t\tvar context = void 0;\n\t\t\t\t\tif (this) {\n\t\t\t\t\t\tcontext = manager.observables.get(this);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontext = manager;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar value = call.call(context, context);\n\t\t\t\t\trecord.valid = true;\n\t\t\t\t\trecord.value = value;\n\t\t\t\t\treturn value;\n\t\t\t\t} finally {\n\t\t\t\t\trecord.computing = false;\n\t\t\t\t\tmanager.callStack.pop();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\t/**\n  * Создает вычисляемое свойство объекта\n  *\n  * @param {Object} obj Объект для которого будет создано вычисляемое свойство\n  * @param {String} key Имя вычисляемого свойства свойства\n  * @param {Function} callOnGet Функция которая будет вычислятся при доступе к свойству\n  * @param {Function} [callOnSet] Функция которая будет выполнятся при установке значения свойства\n  */\n\n\t}, {\n\t\tkey: \"makeComputed\",\n\t\tvalue: function makeComputed(obj, key, callOnGet, callOnSet) {\n\t\t\tObject.defineProperty(obj, key, {\n\t\t\t\tenumerable: true,\n\t\t\t\tget: this.makeUpdatable(callOnGet, obj),\n\t\t\t\tset: callOnSet\n\t\t\t});\n\t\t}\n\t\t/**\n  * Создает {@link UpdatableFunction} и помещает ее в список для проверки\n  * на валидность при изменении данных. Менеджер автозапускает эту\n  * функцию если ее результат стал невалидным\n  *\n  * @param {Function} call\n  *\tФункция для которой будет создана {@link UpdatableFunction}\n  *\tОна будет автозапускатся при изменении {@link Observable} данных использованых при ее вычислении\n  * @param {Boolean} run\n  *\tВыполнить первый запуск реации после ее регистрации.\n  *\tВ зависимости от указанной опции {@link ManagerOptions.immediateReaction}\n  *\tбудет запускатся либо сразу либо по таймауту.\n  *\tЕсли {@link ManagerOptions.enabled} == false то реакция не будет выполнятся даже при установленном параметре run\n  * @return {ReactionHandler} Управляющий объект для зарегестрированной реакции\n  */\n\n\t}, {\n\t\tkey: \"makeReaction\",\n\t\tvalue: function makeReaction(call) {\n\t\t\tvar run = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n\t\t\tvar manager = this;\n\t\t\tvar updatable = this.makeUpdatable(call);\n\t\t\tmanager.reactions.push(updatable);\n\t\t\tif (run) {\n\t\t\t\tif (this.options.immediateReaction) {\n\t\t\t\t\tmanager.run();\n\t\t\t\t} else {\n\t\t\t\t\tmanager.runDeferred();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tunregister: function unregister() {\n\t\t\t\t\tvar idx = manager.reactions.indexOf(updatable);\n\t\t\t\t\tif (idx >= 0) {\n\t\t\t\t\t\tmanager.reactions.splice(idx, 1);\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\treaction: updatable\n\t\t\t};\n\t\t}\n\n\t\t/**\n  * Проверяет является ли объект наблюдаемым\n  *\n  * @param {(Observable|Object|Array)} obj\n  */\n\n\t}, {\n\t\tkey: \"isObservable\",\n\t\tvalue: function isObservable(obj) {\n\t\t\treturn obj[this.$isObservableSymbol] === true;\n\t\t}\n\t\t/**\n  * Запускает все автозапускаемые функции которые помечены как невалидные\n  *\n  * @param {Function} [action]\n  *\tДействия выполняемые внутри вызова этой функции\n  * \tне будут вызывать неотложный запуск реакций.\n  * \tРеакции будут запущены только после выхода из функции action\n  */\n\n\t}, {\n\t\tkey: \"run\",\n\t\tvalue: function run(action) {\n\t\t\tif (!this.options.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.inRunSection = true;\n\t\t\ttry {\n\t\t\t\tif (typeof action === \"function\") {\n\t\t\t\t\taction();\n\t\t\t\t}\n\t\t\t\tthis.runScheduled = false;\n\t\t\t\tthis.reactions.forEach(function (updatable) {\n\t\t\t\t\treturn updatable();\n\t\t\t\t});\n\t\t\t\ttypeof this.onAfterRun === \"function\" && this.onAfterRun();\n\t\t\t} finally {\n\t\t\t\tthis.inRunSection = false;\n\t\t\t}\n\t\t}\n\t\t/**\n  * Запускает все {@link UpdatableFunction} которые помечены как невалидные\n  * В отличии от метода {@link run} запускает их не сразу а по указанному таймауту\n  *\n  * @param {Function} [action] Изменения {@link Observable} выполняемые внутри вызова этой функции не будут вызывать неотложный запуск реакций. Реакции будут запускатся после заданного таймаута\n  * @param {Number} [timeout=0] Таймаут запуска выполнения очереди зарегестрированых реакций\n  */\n\n\t}, {\n\t\tkey: \"runDeferred\",\n\t\tvalue: function runDeferred(action) {\n\t\t\tvar _this = this;\n\n\t\t\tif (!this.options.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.inRunSection = true;\n\t\t\ttry {\n\t\t\t\tif (!this.runScheduled) {\n\t\t\t\t\tthis.runScheduled = setTimeout(function () {\n\t\t\t\t\t\treturn _this.run();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tif (typeof action === \"function\") {\n\t\t\t\t\taction();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tthis.inRunSection = false;\n\t\t\t}\n\t\t}\n\t}]);\n\n\treturn Manager;\n}();\n\nManager.default = new Manager();\nManager.default.Manager = Manager;\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Manager.default);\n\n/**\n * @typedef ManagerOptions\n * @name ManagerOptions\n * @type {Object}\n * @property {Boolean} immediateReaction - Запускать реакции сразу после изменения данных (по-умолчанию false - т.е. реакции выполняются по нулевому таймауту)\n * @property {Boolean} enabled - Активен ли менеджер данных (по-умолчнию true)\n */\n\n/**\n * @typedef ReactionHandler\n * @name ReactionHandler\n * @type {Object}\n * @property {Function} unregister - Удалить реакцию из списка зарегестрированных реакций\n * @property {UpdatableFunction} reaction - Фунция реакции\n */\n\n/**\n * @typedef Observable\n * @name Observable\n * @description Обьект или массив доступ к свойствам которого отслеживается.\n * При доступе к дочерним объектам или массивам также возвращается {@link Observable} объект\n */\n\n/**\n * @typedef UpdatableFunction\n * @name UpdatableFunction\n * @description Функция которая кеширует результат своего выполнение и хранит состояние валидности результата\n *\n * При изменении {@link Observable} данных которые были использованы при вычилении этой функции ее кеш инвалидируется\n *\n * Внутри {@link UpdatableFunction} разрешено только чтение {@link Observable}, при записи будет брошено исключение\n *\n * Если внутри таких функций есть перекрестные ссылки то вычисление производится не будет, будет возвращено `undefined`\n */\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(0).default;\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// active-data.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 39d7906618c6047b88f2","/**\n* Реактивный менеджер данных, следящий за изменениями данных и выполняющий действия в ответ на эти изменения\n* Отслеживание происходит лениво, данные обновляются только когда они требуются\n*\n* @param {ManagerOptions} [options] Настройки менеджера\n*/\nexport class Manager {\n\tconstructor (options) {\n\t\tthis.$isObservableSymbol = Symbol(\"isObservable\");\n\t\tthis.$registerRead = Symbol(\"registerRead\");\n\t\tthis.$dataSource = Symbol(\"dataSource\");\n\t\tthis.observables = new WeakMap();\n\t\tthis.cache = new WeakMap();\n\t\tthis.options = {\n\t\t\tenabled: true,\n\t\t\timmediateReaction: false\n\t\t};\n\t\tthis.callStack = [];\n\t\tthis.reactions = [];\n\t\tthis.setOptions(options);\n\t}\n\t/**\n\t* Динамически устанавливает настройки работы менеджера данных\n\t*\n\t* @param {ManagerOptions} [options] Настройки менеджера\n\t*/\n\tsetOptions (options = {}) {\n\t\tthis.options = Object.assign(this.options, options);\n\t}\n\t/**\n\t* Создает {@link Observable} объект для указанного источника данный\n\t*\n\t* @param {(Object|Array)} dataSource источник данных\n\t* @return {Observable} отслеживаемый объект\n\t*/\n\tmakeObservable (dataSource) {\n\t\tconst manager = this;\n\t\tif (!dataSource) {\n\t\t\treturn dataSource;\n\t\t}\n\t\tif (this.isObservable(dataSource)) {\n\t\t\treturn dataSource;\n\t\t}\n\t\tlet observable = manager.observables.get(dataSource);\n\t\tif (!observable) {\n\t\t\tconst toUpdate = new Map();\n\t\t\tconst invalidateDeps = (record) => {\n\t\t\t\trecord.valid = false;\n\t\t\t\trecord.deps.forEach(record => invalidateDeps(record));\n\t\t\t\trecord.deps.clear();\n\t\t\t};\n\n\n\t\t\tconst registerRead = (record, obj, key) => {\n\t\t\t\tlet records = toUpdate.get(key);\n\t\t\t\tif (!records) {\n\t\t\t\t\trecords = new Set();\n\t\t\t\t\ttoUpdate.set(key, records);\n\t\t\t\t}\n\n\t\t\t\trecords.add(record);\n\n\t\t\t\tlet proto = Object.getPrototypeOf(obj);\n\t\t\t\twhile (proto != null) {\n\t\t\t\t\tconst observableProto = manager.observables.get(proto);\n\t\t\t\t\tif (observableProto != null) {\n\t\t\t\t\t\tobservableProto[manager.$registerRead](record, observableProto[manager.$dataSource], key);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tproto = Object.getPrototypeOf(proto);\n\t\t\t\t}\n\t\t\t};\n\n\n\t\t\tobservable = new Proxy(dataSource, {\n\t\t\t\tget: (obj, key) => {\n\t\t\t\t\tif (key === manager.$isObservableSymbol) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif (key === manager.$dataSource) {\n\t\t\t\t\t\treturn dataSource;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (manager.callStack.length) {\n\t\t\t\t\t\tif (key === manager.$registerRead) {\n\t\t\t\t\t\t\treturn registerRead;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tregisterRead(manager.callStack[manager.callStack.length - 1].record, obj, key);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst val = obj[key];\n\t\t\t\t\tif (val === Object(val) && typeof val !== \"function\") {\n\t\t\t\t\t\treturn manager.makeObservable(val);\n\t\t\t\t\t}\n\t\t\t\t\treturn val;\n\t\t\t\t},\n\t\t\t\tset: (obj, key, val) => {\n\t\t\t\t\tif (manager.callStack && manager.callStack.length) {\n\t\t\t\t\t\tthrow new Error(\"Changing observable objects is restricted inside computed properties and reaction functions!\");\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif (val !== obj[key] || (Array.isArray(obj) && key === \"length\")) {\n\t\t\t\t\t\tobj[key] = val;\n\t\t\t\t\t\tconst records = toUpdate.get(key);\n\t\t\t\t\t\tconsole.log(\"records\", records);\n\t\t\t\t\t\tif (records) {\n\t\t\t\t\t\t\trecords.forEach((record) => invalidateDeps(record));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttoUpdate.delete(key);\n\t\t\t\t\t\tif (!manager.inRunSection) {\n\t\t\t\t\t\t\tif (manager.options.immediateReaction) {\n\t\t\t\t\t\t\t\tmanager.run();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tmanager.runDeferred();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t\tmanager.observables.set(dataSource, observable);\n\t\t}\n\t\treturn observable;\n\t}\n\t/**\n\t* Создает {@link UpdatableFunction}\n\t* Используется в основном для внутренних целей\n\t*\n\t* @param {Function} call Функция для которой будет создана {@link UpdatableFunction}\n\t* @param {Object} obj Если `call` это метод объекта необходимо указать связанный объект\n\t* @return {UpdatableFunction}\n\t*/\n\tmakeUpdatable (call, obj = null) {\n\t\tconst manager = this;\n\t\tif (obj == null) {\n\t\t\tobj = manager;\n\t\t}\n\t\treturn function () {\n\t\t\tlet cacheByObject = manager.cache.get(obj);\n\t\t\tlet record;\n\t\t\tif (cacheByObject) {\n\t\t\t\trecord = cacheByObject.get(call);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcacheByObject = new Map();\n\t\t\t\tmanager.cache.set(obj, cacheByObject);\n\t\t\t}\n\n\t\t\tif (!record) {\n\t\t\t\trecord = {valid: false, value: undefined, deps: new Set()};\n\t\t\t\tcacheByObject.set(call, record);\n\t\t\t}\n\t\t\tif (record.computing) {\n\t\t\t\tconsole.warn(\"Detected cross reference inside computed properties! undefined will be returned to prevent infinite loop\");\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tif (manager.callStack.length) {\n\t\t\t\trecord.deps.add(manager.callStack[manager.callStack.length - 1].record);\n\t\t\t}\n\n\t\t\tif (record.valid) {\n\t\t\t\treturn record.value;\n\t\t\t}\n\t\t\trecord.computing = true;\n\t\t\tmanager.callStack.push({obj, call, record});\n\t\t\ttry {\n\t\t\t\tlet context;\n\t\t\t\tif (this) {\n\t\t\t\t\tcontext = manager.observables.get(this);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcontext = manager;\n\t\t\t\t}\n\n\t\t\t\tconst value = call.call(context, context);\n\t\t\t\trecord.valid = true;\n\t\t\t\trecord.value = value;\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tfinally {\n\t\t\t\trecord.computing = false;\n\t\t\t\tmanager.callStack.pop();\n\t\t\t}\n\t\t};\n\t}\n\t/**\n\t* Создает вычисляемое свойство объекта\n\t*\n\t* @param {Object} obj Объект для которого будет создано вычисляемое свойство\n\t* @param {String} key Имя вычисляемого свойства свойства\n\t* @param {Function} callOnGet Функция которая будет вычислятся при доступе к свойству\n\t* @param {Function} [callOnSet] Функция которая будет выполнятся при установке значения свойства\n\t*/\n\tmakeComputed (obj, key, callOnGet, callOnSet) {\n\t\tObject.defineProperty(obj, key, {\n\t\t\tenumerable: true,\n\t\t\tget: this.makeUpdatable(callOnGet, obj),\n\t\t\tset: callOnSet\n\t\t});\n\t}\n\t/**\n\t* Создает {@link UpdatableFunction} и помещает ее в список для проверки\n\t* на валидность при изменении данных. Менеджер автозапускает эту\n\t* функцию если ее результат стал невалидным\n\t*\n\t* @param {Function} call\n\t*\tФункция для которой будет создана {@link UpdatableFunction}\n\t*\tОна будет автозапускатся при изменении {@link Observable} данных использованых при ее вычислении\n\t* @param {Boolean} run\n\t*\tВыполнить первый запуск реации после ее регистрации.\n\t*\tВ зависимости от указанной опции {@link ManagerOptions.immediateReaction}\n\t*\tбудет запускатся либо сразу либо по таймауту.\n\t*\tЕсли {@link ManagerOptions.enabled} == false то реакция не будет выполнятся даже при установленном параметре run\n\t* @return {ReactionHandler} Управляющий объект для зарегестрированной реакции\n\t*/\n\tmakeReaction (call, run = true) {\n\t\tconst manager = this;\n\t\tconst updatable = this.makeUpdatable(call);\n\t\tmanager.reactions.push(updatable);\n\t\tif (run) {\n\t\t\tif (this.options.immediateReaction) {\n\t\t\t\tmanager.run();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmanager.runDeferred();\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\tunregister () {\n\t\t\t\tconst idx = manager.reactions.indexOf(updatable);\n\t\t\t\tif (idx >= 0) {\n\t\t\t\t\tmanager.reactions.splice(idx, 1);\n\t\t\t\t}\n\t\t\t},\n\t\t\treaction: updatable\n\t\t};\n\t}\n\n\t/**\n\t* Проверяет является ли объект наблюдаемым\n\t*\n\t* @param {(Observable|Object|Array)} obj\n\t*/\n\tisObservable (obj) {\n\t\treturn obj[this.$isObservableSymbol] === true;\n\t}\n\t/**\n\t* Запускает все автозапускаемые функции которые помечены как невалидные\n\t*\n\t* @param {Function} [action]\n\t*\tДействия выполняемые внутри вызова этой функции\n\t* \tне будут вызывать неотложный запуск реакций.\n\t* \tРеакции будут запущены только после выхода из функции action\n\t*/\n\trun (action) {\n\t\tif (!this.options.enabled) {\n\t\t\treturn;\n\t\t}\n\t\tthis.inRunSection = true;\n\t\ttry {\n\t\t\tif (typeof action === \"function\") {\n\t\t\t\taction();\n\t\t\t}\n\t\t\tthis.runScheduled = false;\n\t\t\tthis.reactions.forEach(updatable => updatable());\n\t\t\ttypeof this.onAfterRun === \"function\" && this.onAfterRun();\n\t\t}\n\t\tfinally {\n\t\t\tthis.inRunSection = false;\n\t\t}\n\t}\n\t/**\n\t* Запускает все {@link UpdatableFunction} которые помечены как невалидные\n\t* В отличии от метода {@link run} запускает их не сразу а по указанному таймауту\n\t*\n\t* @param {Function} [action] Изменения {@link Observable} выполняемые внутри вызова этой функции не будут вызывать неотложный запуск реакций. Реакции будут запускатся после заданного таймаута\n\t* @param {Number} [timeout=0] Таймаут запуска выполнения очереди зарегестрированых реакций\n\t*/\n\trunDeferred (action) {\n\t\tif (!this.options.enabled) {\n\t\t\treturn;\n\t\t}\n\t\tthis.inRunSection = true;\n\t\ttry {\n\t\t\tif (!this.runScheduled) {\n\t\t\t\tthis.runScheduled = setTimeout(() => this.run());\n\t\t\t}\n\t\t\tif (typeof action === \"function\") {\n\t\t\t\taction();\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\tthis.inRunSection = false;\n\t\t}\n\t}\n}\n\n\nManager.default = new Manager();\nManager.default.Manager = Manager;\n\nexport default Manager.default;\n\n/**\n * @typedef ManagerOptions\n * @name ManagerOptions\n * @type {Object}\n * @property {Boolean} immediateReaction - Запускать реакции сразу после изменения данных (по-умолчанию false - т.е. реакции выполняются по нулевому таймауту)\n * @property {Boolean} enabled - Активен ли менеджер данных (по-умолчнию true)\n */\n\n /**\n  * @typedef ReactionHandler\n  * @name ReactionHandler\n  * @type {Object}\n  * @property {Function} unregister - Удалить реакцию из списка зарегестрированных реакций\n  * @property {UpdatableFunction} reaction - Фунция реакции\n  */\n\n /**\n  * @typedef Observable\n  * @name Observable\n  * @description Обьект или массив доступ к свойствам которого отслеживается.\n  * При доступе к дочерним объектам или массивам также возвращается {@link Observable} объект\n  */\n\n/**\n * @typedef UpdatableFunction\n * @name UpdatableFunction\n * @description Функция которая кеширует результат своего выполнение и хранит состояние валидности результата\n *\n * При изменении {@link Observable} данных которые были использованы при вычилении этой функции ее кеш инвалидируется\n *\n * Внутри {@link UpdatableFunction} разрешено только чтение {@link Observable}, при записи будет брошено исключение\n *\n * Если внутри таких функций есть перекрестные ссылки то вычисление производится не будет, будет возвращено `undefined`\n */\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = require(\"./index.js\").default;\n\n\n\n// WEBPACK FOOTER //\n// ./src/cjs-entry.js"],"sourceRoot":""}