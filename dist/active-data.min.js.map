{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///active-data.min.js","webpack:///webpack/bootstrap d99dcb1dfafaa5902dde?67aa","webpack:///./src/index.js?9552","webpack:///./src/cjs-entry.js?112a"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","_classCallCheck","instance","Constructor","TypeError","Manager","observable","reaction","computed","updatable","_typeof","Symbol","iterator","obj","constructor","_createClass","defineProperties","target","props","length","descriptor","writable","key","protoProps","staticProps","options","$isObservableSymbol","$registerRead","$dataSource","observables","WeakMap","cache","enabled","immediateReaction","watchKey","watchDeepKey","dataSourceKey","callStack","reactions","setOptions","makeObservable","bind","makeReaction","makeComputed","makeUpdatable","arguments","undefined","assign","dataSource","manager","Array","isObservable","toUpdate","Map","invalidateDeps","updatableState","valid","invalidIteration","deps","forEach","clear","initUpdates","updates","updatableStates","Set","updatableStateMap","set","watchDeepSection","registerRead","prototypes","currentKey","keys","add","updatableStateEx","uninit","delete","size","rootObj","proto","getPrototypeOf","observableProto","unshift","updateProperty","updKey","from","values","some","idx","indexOf","invalidate","inRunSection","run","runDeferred","Proxy","context","propertyDescriptor","getOwnPropertyDescriptor","val","isArray","deleteProperty","updatableCall","updatableFunction","objectCallCache","computing","console","warn","push","pop","callOnGet","callOnSet","unregister","splice","action","runScheduled","iterations","Error","onAfterRun","_this","setTimeout","default"],"mappings":"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","file":"active-data.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"activeData\"] = factory();\n\telse\n\t\troot[\"activeData\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"activeData\"] = factory();\n\telse\n\t\troot[\"activeData\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Manager\", function() { return Manager; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"observable\", function() { return observable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"reaction\", function() { return reaction; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"computed\", function() { return computed; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"updatable\", function() { return updatable; });\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar maxIterations = 10;\n\n/**\n* Реактивный менеджер данных, следящий за изменениями данных\n* и выполняющий действия в ответ на эти изменения\n* Отслеживание происходит лениво, данные обновляются только когда они требуются\n*\n* @param {ManagerOptions} [options] Настройки менеджера\n*/\nvar Manager = function () {\n\tfunction Manager(options) {\n\t\t_classCallCheck(this, Manager);\n\n\t\tthis.$isObservableSymbol = Symbol(\"isObservable\");\n\t\tthis.$registerRead = Symbol(\"registerRead\");\n\t\tthis.$dataSource = Symbol(\"dataSource\");\n\t\tthis.observables = new WeakMap();\n\t\tthis.cache = new WeakMap();\n\t\tthis.options = {\n\t\t\tenabled: true,\n\t\t\timmediateReaction: false,\n\t\t\twatchKey: \"$$watch\",\n\t\t\twatchDeepKey: \"$$watchDeep\",\n\t\t\tdataSourceKey: \"$$dataSource\"\n\t\t};\n\t\tthis.callStack = [];\n\t\tthis.reactions = [];\n\t\tthis.setOptions(options);\n\n\t\tthis.observable = this.makeObservable.bind(this);\n\t\tthis.reaction = this.makeReaction.bind(this);\n\t\tthis.computed = this.makeComputed.bind(this);\n\t\tthis.updatable = this.makeUpdatable.bind(this);\n\t}\n\t/**\n * Динамически устанавливает настройки работы менеджера данных\n *\n * @param {ManagerOptions} [options] Настройки менеджера\n */\n\n\n\t_createClass(Manager, [{\n\t\tkey: \"setOptions\",\n\t\tvalue: function setOptions() {\n\t\t\tvar options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n\t\t\tthis.options = Object.assign(this.options, options);\n\t\t}\n\t\t/**\n  * Создает {@link Observable} объект для указанного источника данный\n  *\n  * @param {(Object|Array)} dataSource источник данных\n  * @return {Observable} отслеживаемый объект\n  */\n\n\t}, {\n\t\tkey: \"makeObservable\",\n\t\tvalue: function makeObservable(dataSource) {\n\t\t\tvar manager = this;\n\t\t\tif (!dataSource) {\n\t\t\t\treturn dataSource;\n\t\t\t}\n\t\t\tif (dataSource.constructor !== Object && dataSource.constructor !== Array) {\n\t\t\t\treturn dataSource;\n\t\t\t}\n\n\t\t\tif (manager.isObservable(dataSource)) {\n\t\t\t\treturn dataSource;\n\t\t\t}\n\t\t\tvar observable = manager.observables.get(dataSource);\n\t\t\tif (!observable) {\n\t\t\t\tvar toUpdate = new Map();\n\t\t\t\tvar invalidateDeps = function invalidateDeps(updatableState) {\n\t\t\t\t\tmanager.valid = false;\n\t\t\t\t\tupdatableState.invalidIteration = true;\n\t\t\t\t\tif (updatableState.valid) {\n\t\t\t\t\t\tupdatableState.valid = false;\n\t\t\t\t\t\tupdatableState.deps.forEach(function (updatableState) {\n\t\t\t\t\t\t\treturn invalidateDeps(updatableState);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tupdatableState.deps.clear();\n\t\t\t\t};\n\n\t\t\t\tvar initUpdates = function initUpdates(key) {\n\t\t\t\t\tvar updates = { updatableStates: new Set(), updatableStateMap: new WeakMap() };\n\t\t\t\t\ttoUpdate.set(key, updates);\n\t\t\t\t\treturn updates;\n\t\t\t\t};\n\t\t\t\tvar watchDeepSection = false;\n\t\t\t\tvar registerRead = function registerRead(updatableState, key, prototypes) {\n\t\t\t\t\tvar currentKey = key;\n\t\t\t\t\tif (key === manager.options.watchDeepKey) {\n\t\t\t\t\t\tif (watchDeepSection) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\twatchDeepSection = true;\n\t\t\t\t\t\tObject.keys(dataSource).forEach(function (key) {\n\t\t\t\t\t\t\tif (_typeof(dataSource[key]) === \"object\") {\n\t\t\t\t\t\t\t\tvar obs = manager.makeObservable(dataSource[key]);\n\t\t\t\t\t\t\t\tobs[manager.options.watchDeepKey];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tcurrentKey = manager.options.watchKey;\n\t\t\t\t\t\twatchDeepSection = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar updates = toUpdate.get(currentKey);\n\t\t\t\t\tif (!updates) {\n\t\t\t\t\t\tupdates = initUpdates(currentKey);\n\t\t\t\t\t}\n\t\t\t\t\tupdates.updatableStates.add(updatableState);\n\t\t\t\t\tvar updatableStateEx = updates.updatableStateMap.get(updatableState);\n\t\t\t\t\tif (!updatableStateEx) {\n\t\t\t\t\t\tupdatableStateEx = {};\n\t\t\t\t\t\tupdates.updatableStateMap.set(updatableState, updatableStateEx);\n\t\t\t\t\t}\n\t\t\t\t\tupdatableState.uninit.set(dataSource, function (updatableState) {\n\t\t\t\t\t\tupdates.updatableStates.delete(updatableState);\n\t\t\t\t\t\tupdates.updatableStateMap.delete(updatableState);\n\t\t\t\t\t\tif (updates.updatableStates.size === 0) {\n\t\t\t\t\t\t\ttoUpdate.delete(currentKey);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tvar isRoot = !prototypes;\n\t\t\t\t\tif (isRoot) {\n\t\t\t\t\t\tprototypes = [dataSource];\n\t\t\t\t\t\tupdatableStateEx.root = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar rootObj = prototypes[prototypes.length - 1];\n\t\t\t\t\t\tif (!updatableStateEx.prototypes) {\n\t\t\t\t\t\t\tupdatableStateEx.prototypes = new Map();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar _prototypes = updatableStateEx.prototypes.get(rootObj);\n\t\t\t\t\t\tif (_prototypes) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tupdatableStateEx.prototypes.set(rootObj, prototypes);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar proto = Object.getPrototypeOf(dataSource);\n\t\t\t\t\twhile (proto != null && proto != Object.prototype) {\n\t\t\t\t\t\tvar observableProto = manager.observables.get(proto);\n\t\t\t\t\t\tprototypes.unshift(proto);\n\t\t\t\t\t\tif (observableProto != null && observableProto !== Object.prototype) {\n\t\t\t\t\t\t\tobservableProto[manager.$registerRead](updatableState, key, prototypes);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tproto = Object.getPrototypeOf(proto);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tvar updateProperty = function updateProperty(obj, key) {\n\t\t\t\t\t[key, manager.options.watchKey].forEach(function (updKey) {\n\t\t\t\t\t\tvar updates = toUpdate.get(updKey);\n\t\t\t\t\t\tif (updates) {\n\t\t\t\t\t\t\tupdates.updatableStates.forEach(function (updatableState) {\n\t\t\t\t\t\t\t\tvar updatableStateEx = updates.updatableStateMap.get(updatableState);\n\t\t\t\t\t\t\t\tif (updatableStateEx.root) {\n\t\t\t\t\t\t\t\t\tinvalidateDeps(updatableState);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tvar invalidateAll = Array.from(updatableStateEx.prototypes.values()).some(function (prototypes) {\n\t\t\t\t\t\t\t\t\t\tvar idx = prototypes.indexOf(obj) + 1;\n\t\t\t\t\t\t\t\t\t\tvar l = prototypes.length;\n\t\t\t\t\t\t\t\t\t\tvar invalidate = true;\n\t\t\t\t\t\t\t\t\t\tfor (var i = idx; i < l; i++) {\n\t\t\t\t\t\t\t\t\t\t\tif (prototypes[i].hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\t\t\t\t\tinvalidate = false;\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treturn invalidate;\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tif (invalidateAll) {\n\t\t\t\t\t\t\t\t\t\tinvalidateDeps(updatableState);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tif (!manager.inRunSection) {\n\t\t\t\t\t\tif (manager.options.immediateReaction) {\n\t\t\t\t\t\t\tmanager.run();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmanager.runDeferred();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tobservable = new Proxy(dataSource, {\n\t\t\t\t\tget: function get(obj, key, context) {\n\t\t\t\t\t\tif (key === manager.$isObservableSymbol) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (key === manager.options.dataSourceKey) {\n\t\t\t\t\t\t\treturn dataSource;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar propertyDescriptor = Object.getOwnPropertyDescriptor(obj, key);\n\n\t\t\t\t\t\tif (propertyDescriptor && typeof propertyDescriptor.get === \"function\") {\n\t\t\t\t\t\t\treturn manager.makeUpdatable(propertyDescriptor.get, obj).call(obj);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (manager.callStack.length) {\n\t\t\t\t\t\t\tif (key === manager.$registerRead) {\n\t\t\t\t\t\t\t\treturn registerRead;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tregisterRead(manager.callStack[manager.callStack.length - 1].updatableState, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (key === manager.options.watchKey || key === manager.options.watchDeepKey) {\n\t\t\t\t\t\t\treturn context;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar val = obj[key];\n\t\t\t\t\t\tif ((typeof val === \"undefined\" ? \"undefined\" : _typeof(val)) === \"object\") {\n\t\t\t\t\t\t\treturn manager.makeObservable(val);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn val;\n\t\t\t\t\t},\n\t\t\t\t\tset: function set(obj, key, val) {\n\t\t\t\t\t\tif (val !== obj[key] || Array.isArray(obj) && key === \"length\") {\n\t\t\t\t\t\t\tobj[key] = val;\n\t\t\t\t\t\t\tupdateProperty(obj, key);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t},\n\t\t\t\t\tdeleteProperty: function deleteProperty(obj, key) {\n\t\t\t\t\t\tupdateProperty(obj, key);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tmanager.observables.set(dataSource, observable);\n\t\t\t}\n\t\t\treturn observable;\n\t\t}\n\t\t/**\n  * Создает {@link UpdatableFunction}\n  * Используется в основном для внутренних целей\n  *\n  * @param {Function} call Функция для которой будет создана {@link UpdatableFunction}\n  * @param {Object} obj Если `call` это метод объекта необходимо указать связанный объект\n  * @return {UpdatableFunction}\n  */\n\n\t}, {\n\t\tkey: \"makeUpdatable\",\n\t\tvalue: function makeUpdatable(call) {\n\t\t\tvar obj = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n\t\t\tif (call.updatableCall) {\n\t\t\t\treturn call;\n\t\t\t}\n\t\t\tvar manager = this;\n\t\t\tif (obj == null) {\n\t\t\t\tobj = manager;\n\t\t\t}\n\t\t\tvar updatableFunction = void 0;\n\t\t\tvar objectCallCache = manager.cache.get(obj);\n\n\t\t\tif (objectCallCache) {\n\t\t\t\tupdatableFunction = objectCallCache.get(call);\n\t\t\t} else {\n\t\t\t\tobjectCallCache = new Map();\n\t\t\t\tmanager.cache.set(obj, objectCallCache);\n\t\t\t}\n\t\t\tif (!updatableFunction) {\n\t\t\t\tmanager.valid = false;\n\t\t\t\tvar updatableState = { valid: false, value: undefined, deps: new Set(), uninit: new Map() };\n\t\t\t\tupdatableFunction = function updatableFunction() {\n\t\t\t\t\tif (updatableState.computing) {\n\t\t\t\t\t\tconsole.warn(\"Detected cross reference inside computed properties!\" + \" \\\"undefined\\\" will be returned to prevent infinite loop\");\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\t\t\t\t\tif (manager.callStack.length) {\n\t\t\t\t\t\tupdatableState.deps.add(manager.callStack[manager.callStack.length - 1].updatableState);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (updatableState.valid) {\n\t\t\t\t\t\treturn updatableState.value;\n\t\t\t\t\t}\n\t\t\t\t\tupdatableState.computing = true;\n\t\t\t\t\tupdatableState.uninit.forEach(function (uninit) {\n\t\t\t\t\t\treturn uninit(updatableState);\n\t\t\t\t\t});\n\t\t\t\t\tupdatableState.uninit.clear();\n\n\t\t\t\t\tmanager.callStack.push({ obj: obj, call: call, updatableState: updatableState });\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvar context = void 0;\n\t\t\t\t\t\tif (this) {\n\t\t\t\t\t\t\tcontext = manager.observables.get(this);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcontext = manager;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tupdatableState.invalidIteration = false;\n\t\t\t\t\t\tvar value = call.call(context, context);\n\t\t\t\t\t\tupdatableState.valid = !updatableState.invalidIteration; // check if it was invalidated inside call\n\t\t\t\t\t\tupdatableState.value = value;\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tupdatableState.computing = false;\n\t\t\t\t\t\tmanager.callStack.pop();\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tupdatableFunction.updatableCall = call;\n\t\t\t\tobjectCallCache.set(call, updatableFunction);\n\t\t\t}\n\t\t\treturn updatableFunction;\n\t\t}\n\t\t/**\n  * Создает вычисляемое свойство объекта\n  *\n  * @param {Object} obj Объект для которого будет создано вычисляемое свойство\n  * @param {String} key Имя вычисляемого свойства свойства\n  * @param {Function} callOnGet Функция которая будет вычислятся при доступе к свойству\n  * @param {Function} [callOnSet] Функция которая будет выполнятся при установке значения свойства\n  */\n\n\t}, {\n\t\tkey: \"makeComputed\",\n\t\tvalue: function makeComputed(obj, key, callOnGet, callOnSet) {\n\t\t\tObject.defineProperty(obj, key, {\n\t\t\t\tenumerable: true,\n\t\t\t\tget: this.makeUpdatable(callOnGet, obj),\n\t\t\t\tset: callOnSet\n\t\t\t});\n\t\t}\n\t\t/**\n  * Создает {@link UpdatableFunction} и помещает ее в список для проверки\n  * на валидность при изменении данных. Менеджер автозапускает эту\n  * функцию если ее результат стал невалидным\n  *\n  * @param {Function} call\n  * Функция для которой будет создана {@link UpdatableFunction}\n  * Она будет автозапускатся при изменении {@link Observable} данных использованых при ее вычислении\n  * @param {Boolean} run\n  * Выполнить первый запуск реации после ее регистрации.\n  * В зависимости от указанной опции {@link ManagerOptions.immediateReaction}\n  * будет запускатся либо сразу либо по таймауту.\n  * Если {@link ManagerOptions.enabled} == false то реакция не будет\n  * выполнятся даже при установленном параметре run\n  * @return {ReactionHandler} Управляющий объект для зарегестрированной реакции\n  */\n\n\t}, {\n\t\tkey: \"makeReaction\",\n\t\tvalue: function makeReaction(call) {\n\t\t\tvar run = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n\t\t\tvar manager = this;\n\t\t\tvar updatable = this.makeUpdatable(call);\n\t\t\tmanager.reactions.push(updatable);\n\t\t\tif (run) {\n\t\t\t\tif (this.options.immediateReaction) {\n\t\t\t\t\tmanager.run();\n\t\t\t\t} else {\n\t\t\t\t\tmanager.runDeferred();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tunregister: function unregister() {\n\t\t\t\t\tvar idx = manager.reactions.indexOf(updatable);\n\t\t\t\t\tif (idx >= 0) {\n\t\t\t\t\t\tmanager.reactions.splice(idx, 1);\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\treaction: updatable\n\t\t\t};\n\t\t}\n\n\t\t/**\n  * Проверяет является ли объект наблюдаемым\n  *\n  * @param {(Observable|Object|Array)} obj\n  */\n\n\t}, {\n\t\tkey: \"isObservable\",\n\t\tvalue: function isObservable(obj) {\n\t\t\treturn obj[this.$isObservableSymbol] === true;\n\t\t}\n\t\t/**\n  * Запускает все автозапускаемые функции которые помечены как невалидные\n  *\n  * @param {Function} [action]\n  * Действия выполняемые внутри вызова этой функции\n  * не будут вызывать неотложный запуск реакций.\n  * Реакции будут запущены только после выхода из функции action\n  */\n\n\t}, {\n\t\tkey: \"run\",\n\t\tvalue: function run(action) {\n\t\t\tif (!this.options.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.inRunSection = true;\n\t\t\ttry {\n\t\t\t\tif (typeof action === \"function\") {\n\t\t\t\t\taction();\n\t\t\t\t}\n\t\t\t\tthis.runScheduled = false;\n\t\t\t\tvar iterations = 0;\n\t\t\t\twhile (!this.valid) {\n\t\t\t\t\tthis.valid = true;\n\t\t\t\t\tif (iterations > maxIterations) {\n\t\t\t\t\t\tthrow new Error(\"Max iterations exceeded!\");\n\t\t\t\t\t}\n\t\t\t\t\titerations++;\n\t\t\t\t\tthis.reactions.forEach(function (updatable) {\n\t\t\t\t\t\treturn updatable();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\ttypeof this.onAfterRun === \"function\" && this.onAfterRun();\n\t\t\t} finally {\n\t\t\t\tthis.inRunSection = false;\n\t\t\t}\n\t\t}\n\t\t/**\n  * Запускает все {@link UpdatableFunction} которые помечены как невалидные\n  * В отличии от метода {@link run} запускает их не сразу а по указанному таймауту\n  *\n  * @param {Function} [action] Изменения {@link Observable} выполняемые внутри\n  * вызова этой функции не будут вызывать неотложный запуск реакций.\n  * Реакции будут запускатся после заданного таймаута\n  * @param {Number} [timeout=0] Таймаут запуска выполнения очереди зарегестрированых реакций\n  */\n\n\t}, {\n\t\tkey: \"runDeferred\",\n\t\tvalue: function runDeferred(action) {\n\t\t\tvar _this = this;\n\n\t\t\tif (!this.options.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.inRunSection = true;\n\t\t\ttry {\n\t\t\t\tif (!this.runScheduled) {\n\t\t\t\t\tthis.runScheduled = setTimeout(function () {\n\t\t\t\t\t\treturn _this.run();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tif (typeof action === \"function\") {\n\t\t\t\t\taction();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tthis.inRunSection = false;\n\t\t\t}\n\t\t}\n\t}]);\n\n\treturn Manager;\n}();\n\nManager.default = new Manager();\nManager.default.Manager = Manager;\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Manager.default);\nvar observable = Manager.default.observable;\nvar reaction = Manager.default.reaction;\nvar computed = Manager.default.computed;\nvar updatable = Manager.default.updatable;\n\n/**\n * @typedef ManagerOptions\n * @name ManagerOptions\n * @type {Object}\n * @property {Boolean} immediateReaction\n * Запускать реакции сразу после изменения\n * данных (по-умолчанию false - т.е. реакции выполняются по нулевому таймауту)\n * @property {Boolean} enabled - Активен ли менеджер данных (по-умолчнию true)\n */\n\n/**\n * @typedef ReactionHandler\n * @name ReactionHandler\n * @type {Object}\n * @property {Function} unregister - Удалить реакцию из списка зарегестрированных реакций\n * @property {UpdatableFunction} reaction - Фунция реакции\n */\n\n/**\n * @typedef Observable\n * @name Observable\n * @description Обьект или массив доступ к свойствам которого отслеживается.\n * При доступе к дочерним объектам или массивам также возвращается {@link Observable} объект\n */\n\n/**\n * @typedef UpdatableFunction\n * @name UpdatableFunction\n * @description Функция которая кеширует результат своего выполнение и хранит состояние валидности результата\n *\n * При изменении {@link Observable} данных которые были использованы при вычилении этой функции ее кеш инвалидируется\n *\n * Внутри {@link UpdatableFunction} разрешено только чтение {@link Observable}, при записи будет брошено исключение\n *\n * Если внутри таких функций есть перекрестные ссылки то вычисление производится не будет, будет возвращено `undefined`\n */\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(0).default;\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// active-data.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d99dcb1dfafaa5902dde","const maxIterations = 10;\n\n/**\n* Реактивный менеджер данных, следящий за изменениями данных\n* и выполняющий действия в ответ на эти изменения\n* Отслеживание происходит лениво, данные обновляются только когда они требуются\n*\n* @param {ManagerOptions} [options] Настройки менеджера\n*/\nexport class Manager {\n\tconstructor (options) {\n\t\tthis.$isObservableSymbol = Symbol(\"isObservable\");\n\t\tthis.$registerRead = Symbol(\"registerRead\");\n\t\tthis.$dataSource = Symbol(\"dataSource\");\n\t\tthis.observables = new WeakMap();\n\t\tthis.cache = new WeakMap();\n\t\tthis.options = {\n\t\t\tenabled: true,\n\t\t\timmediateReaction: false,\n\t\t\twatchKey: \"$$watch\",\n\t\t\twatchDeepKey: \"$$watchDeep\",\n\t\t\tdataSourceKey: \"$$dataSource\"\n\t\t};\n\t\tthis.callStack = [];\n\t\tthis.reactions = [];\n\t\tthis.setOptions(options);\n\n\t\tthis.observable = this.makeObservable.bind(this);\n\t\tthis.reaction = this.makeReaction.bind(this);\n\t\tthis.computed = this.makeComputed.bind(this);\n\t\tthis.updatable = this.makeUpdatable.bind(this);\n\t}\n\t/**\n\t* Динамически устанавливает настройки работы менеджера данных\n\t*\n\t* @param {ManagerOptions} [options] Настройки менеджера\n\t*/\n\tsetOptions (options = {}) {\n\t\tthis.options = Object.assign(this.options, options);\n\t}\n\t/**\n\t* Создает {@link Observable} объект для указанного источника данный\n\t*\n\t* @param {(Object|Array)} dataSource источник данных\n\t* @return {Observable} отслеживаемый объект\n\t*/\n\tmakeObservable (dataSource) {\n\t\tconst manager = this;\n\t\tif (!dataSource) {\n\t\t\treturn dataSource;\n\t\t}\n\t\tif (dataSource.constructor !== Object && dataSource.constructor !== Array) {\n\t\t\treturn dataSource;\n\t\t}\n\n\t\tif (manager.isObservable(dataSource)) {\n\t\t\treturn dataSource;\n\t\t}\n\t\tlet observable = manager.observables.get(dataSource);\n\t\tif (!observable) {\n\t\t\tconst toUpdate = new Map();\n\t\t\tconst invalidateDeps = (updatableState) => {\n\t\t\t\tmanager.valid = false;\n\t\t\t\tupdatableState.invalidIteration = true;\n\t\t\t\tif (updatableState.valid) {\n\t\t\t\t\tupdatableState.valid = false;\n\t\t\t\t\tupdatableState.deps.forEach(updatableState => invalidateDeps(updatableState));\n\t\t\t\t}\n\t\t\t\tupdatableState.deps.clear();\n\t\t\t};\n\n\t\t\tconst initUpdates = (key) => {\n\t\t\t\tconst updates = {updatableStates: new Set(), updatableStateMap: new WeakMap()};\n\t\t\t\ttoUpdate.set(key, updates);\n\t\t\t\treturn updates;\n\t\t\t};\n\t\t\tlet watchDeepSection = false;\n\t\t\tconst registerRead = (updatableState, key, prototypes) => {\n\t\t\t\tlet currentKey = key;\n\t\t\t\tif (key === manager.options.watchDeepKey) {\n\t\t\t\t\tif (watchDeepSection) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\twatchDeepSection = true;\n\t\t\t\t\tObject.keys(dataSource).forEach(key => {\n\t\t\t\t\t\tif (typeof dataSource[key] === \"object\") {\n\t\t\t\t\t\t\tconst obs = manager.makeObservable(dataSource[key]);\n\t\t\t\t\t\t\tobs[manager.options.watchDeepKey];\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tcurrentKey = manager.options.watchKey;\n\t\t\t\t\twatchDeepSection = false;\n\t\t\t\t}\n\n\t\t\t\tlet updates = toUpdate.get(currentKey);\n\t\t\t\tif (!updates) {\n\t\t\t\t\tupdates = initUpdates(currentKey);\n\t\t\t\t}\n\t\t\t\tupdates.updatableStates.add(updatableState);\n\t\t\t\tlet updatableStateEx = updates.updatableStateMap.get(updatableState);\n\t\t\t\tif (!updatableStateEx) {\n\t\t\t\t\tupdatableStateEx = {};\n\t\t\t\t\tupdates.updatableStateMap.set(updatableState, updatableStateEx);\n\t\t\t\t}\n\t\t\t\tupdatableState.uninit.set(dataSource, updatableState => {\n\t\t\t\t\tupdates.updatableStates.delete(updatableState);\n\t\t\t\t\tupdates.updatableStateMap.delete(updatableState);\n\t\t\t\t\tif (updates.updatableStates.size === 0) {\n\t\t\t\t\t\ttoUpdate.delete(currentKey);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tconst isRoot = !prototypes;\n\t\t\t\tif (isRoot) {\n\t\t\t\t\tprototypes = [dataSource];\n\t\t\t\t\tupdatableStateEx.root = true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst rootObj = prototypes[prototypes.length - 1];\n\t\t\t\t\tif (!updatableStateEx.prototypes) {\n\t\t\t\t\t\tupdatableStateEx.prototypes = new Map();\n\t\t\t\t\t}\n\t\t\t\t\tconst _prototypes = updatableStateEx.prototypes.get(rootObj);\n\t\t\t\t\tif (_prototypes) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tupdatableStateEx.prototypes.set(rootObj, prototypes);\n\t\t\t\t}\n\n\t\t\t\tlet proto = Object.getPrototypeOf(dataSource);\n\t\t\t\twhile (proto != null && proto != Object.prototype) {\n\t\t\t\t\tconst observableProto = manager.observables.get(proto);\n\t\t\t\t\tprototypes.unshift(proto);\n\t\t\t\t\tif (observableProto != null && observableProto !== Object.prototype) {\n\t\t\t\t\t\tobservableProto[manager.$registerRead](updatableState, key, prototypes);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tproto = Object.getPrototypeOf(proto);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tconst updateProperty = (obj, key) => {\n\t\t\t\t[key, manager.options.watchKey].forEach(updKey => {\n\t\t\t\t\tconst updates = toUpdate.get(updKey);\n\t\t\t\t\tif (updates) {\n\t\t\t\t\t\tupdates.updatableStates.forEach((updatableState) => {\n\t\t\t\t\t\t\tconst updatableStateEx = updates.updatableStateMap.get(updatableState);\n\t\t\t\t\t\t\tif (updatableStateEx.root) {\n\t\t\t\t\t\t\t\tinvalidateDeps(updatableState);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tconst invalidateAll = Array.from(updatableStateEx.prototypes.values())\n\t\t\t\t\t\t\t\t.some((prototypes) => {\n\t\t\t\t\t\t\t\t\tconst idx = prototypes.indexOf(obj) + 1;\n\t\t\t\t\t\t\t\t\tconst l = prototypes.length;\n\t\t\t\t\t\t\t\t\tlet invalidate = true;\n\t\t\t\t\t\t\t\t\tfor (let i = idx; i < l; i++) {\n\t\t\t\t\t\t\t\t\t\tif (prototypes[i].hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\t\t\t\tinvalidate = false;\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn invalidate;\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tif (invalidateAll) {\n\t\t\t\t\t\t\t\t\tinvalidateDeps(updatableState);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (!manager.inRunSection) {\n\t\t\t\t\tif (manager.options.immediateReaction) {\n\t\t\t\t\t\tmanager.run();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tmanager.runDeferred();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tobservable = new Proxy(dataSource, {\n\t\t\t\tget: (obj, key, context) => {\n\t\t\t\t\tif (key === manager.$isObservableSymbol) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif (key === manager.options.dataSourceKey) {\n\t\t\t\t\t\treturn dataSource;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst propertyDescriptor = Object.getOwnPropertyDescriptor(obj, key);\n\n\t\t\t\t\tif (propertyDescriptor && typeof propertyDescriptor.get === \"function\") {\n\t\t\t\t\t\treturn manager.makeUpdatable(propertyDescriptor.get, obj).call(obj);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (manager.callStack.length) {\n\t\t\t\t\t\tif (key === manager.$registerRead) {\n\t\t\t\t\t\t\treturn registerRead;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tregisterRead(manager.callStack[manager.callStack.length - 1].updatableState, key);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (key === manager.options.watchKey || key === manager.options.watchDeepKey) {\n\t\t\t\t\t\treturn context;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst val = obj[key];\n\t\t\t\t\tif (typeof val === \"object\") {\n\t\t\t\t\t\treturn manager.makeObservable(val);\n\t\t\t\t\t}\n\t\t\t\t\treturn val;\n\t\t\t\t},\n\t\t\t\tset: (obj, key, val) => {\n\t\t\t\t\tif (val !== obj[key] || (Array.isArray(obj) && key === \"length\")) {\n\t\t\t\t\t\tobj[key] = val;\n\t\t\t\t\t\tupdateProperty(obj, key);\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t},\n\t\t\t\tdeleteProperty: (obj, key) => {\n\t\t\t\t\tupdateProperty(obj, key);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t\tmanager.observables.set(dataSource, observable);\n\t\t}\n\t\treturn observable;\n\t}\n\t/**\n\t* Создает {@link UpdatableFunction}\n\t* Используется в основном для внутренних целей\n\t*\n\t* @param {Function} call Функция для которой будет создана {@link UpdatableFunction}\n\t* @param {Object} obj Если `call` это метод объекта необходимо указать связанный объект\n\t* @return {UpdatableFunction}\n\t*/\n\tmakeUpdatable (call, obj = null) {\n\t\tif (call.updatableCall) {\n\t\t\treturn call;\n\t\t}\n\t\tconst manager = this;\n\t\tif (obj == null) {\n\t\t\tobj = manager;\n\t\t}\n\t\tlet updatableFunction;\n\t\tlet objectCallCache = manager.cache.get(obj);\n\n\t\tif (objectCallCache) {\n\t\t\tupdatableFunction = objectCallCache.get(call);\n\t\t}\n\t\telse {\n\t\t\tobjectCallCache = new Map();\n\t\t\tmanager.cache.set(obj, objectCallCache);\n\t\t}\n\t\tif (!updatableFunction) {\n\t\t\tmanager.valid = false;\n\t\t\tconst updatableState = {valid: false, value: undefined, deps: new Set(), uninit: new Map()};\n\t\t\tupdatableFunction = function () {\n\t\t\t\tif (updatableState.computing) {\n\t\t\t\t\tconsole.warn(`Detected cross reference inside computed properties!`\n\t\t\t\t\t\t+ ` \"undefined\" will be returned to prevent infinite loop`\n\t\t\t\t\t);\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\tif (manager.callStack.length) {\n\t\t\t\t\tupdatableState.deps.add(manager.callStack[manager.callStack.length - 1].updatableState);\n\t\t\t\t}\n\n\t\t\t\tif (updatableState.valid) {\n\t\t\t\t\treturn updatableState.value;\n\t\t\t\t}\n\t\t\t\tupdatableState.computing = true;\n\t\t\t\tupdatableState.uninit.forEach(uninit => uninit(updatableState));\n\t\t\t\tupdatableState.uninit.clear();\n\n\t\t\t\tmanager.callStack.push({obj, call, updatableState});\n\t\t\t\ttry {\n\t\t\t\t\tlet context;\n\t\t\t\t\tif (this) {\n\t\t\t\t\t\tcontext = manager.observables.get(this);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tcontext = manager;\n\t\t\t\t\t}\n\t\t\t\t\tupdatableState.invalidIteration = false;\n\t\t\t\t\tconst value = call.call(context, context);\n\t\t\t\t\tupdatableState.valid = !updatableState.invalidIteration; // check if it was invalidated inside call\n\t\t\t\t\tupdatableState.value = value;\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t\tfinally {\n\t\t\t\t\tupdatableState.computing = false;\n\t\t\t\t\tmanager.callStack.pop();\n\t\t\t\t}\n\t\t\t};\n\t\t\tupdatableFunction.updatableCall = call;\n\t\t\tobjectCallCache.set(call, updatableFunction);\n\t\t}\n\t\treturn updatableFunction;\n\t}\n\t/**\n\t* Создает вычисляемое свойство объекта\n\t*\n\t* @param {Object} obj Объект для которого будет создано вычисляемое свойство\n\t* @param {String} key Имя вычисляемого свойства свойства\n\t* @param {Function} callOnGet Функция которая будет вычислятся при доступе к свойству\n\t* @param {Function} [callOnSet] Функция которая будет выполнятся при установке значения свойства\n\t*/\n\tmakeComputed (obj, key, callOnGet, callOnSet) {\n\t\tObject.defineProperty(obj, key, {\n\t\t\tenumerable: true,\n\t\t\tget: this.makeUpdatable(callOnGet, obj),\n\t\t\tset: callOnSet\n\t\t});\n\t}\n\t/**\n\t* Создает {@link UpdatableFunction} и помещает ее в список для проверки\n\t* на валидность при изменении данных. Менеджер автозапускает эту\n\t* функцию если ее результат стал невалидным\n\t*\n\t* @param {Function} call\n\t* Функция для которой будет создана {@link UpdatableFunction}\n\t* Она будет автозапускатся при изменении {@link Observable} данных использованых при ее вычислении\n\t* @param {Boolean} run\n\t* Выполнить первый запуск реации после ее регистрации.\n\t* В зависимости от указанной опции {@link ManagerOptions.immediateReaction}\n\t* будет запускатся либо сразу либо по таймауту.\n\t* Если {@link ManagerOptions.enabled} == false то реакция не будет\n\t* выполнятся даже при установленном параметре run\n\t* @return {ReactionHandler} Управляющий объект для зарегестрированной реакции\n\t*/\n\tmakeReaction (call, run = true) {\n\t\tconst manager = this;\n\t\tconst updatable = this.makeUpdatable(call);\n\t\tmanager.reactions.push(updatable);\n\t\tif (run) {\n\t\t\tif (this.options.immediateReaction) {\n\t\t\t\tmanager.run();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmanager.runDeferred();\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\tunregister () {\n\t\t\t\tconst idx = manager.reactions.indexOf(updatable);\n\t\t\t\tif (idx >= 0) {\n\t\t\t\t\tmanager.reactions.splice(idx, 1);\n\t\t\t\t}\n\t\t\t},\n\t\t\treaction: updatable\n\t\t};\n\t}\n\n\t/**\n\t* Проверяет является ли объект наблюдаемым\n\t*\n\t* @param {(Observable|Object|Array)} obj\n\t*/\n\tisObservable (obj) {\n\t\treturn obj[this.$isObservableSymbol] === true;\n\t}\n\t/**\n\t* Запускает все автозапускаемые функции которые помечены как невалидные\n\t*\n\t* @param {Function} [action]\n\t* Действия выполняемые внутри вызова этой функции\n\t* не будут вызывать неотложный запуск реакций.\n\t* Реакции будут запущены только после выхода из функции action\n\t*/\n\trun (action) {\n\t\tif (!this.options.enabled) {\n\t\t\treturn;\n\t\t}\n\t\tthis.inRunSection = true;\n\t\ttry {\n\t\t\tif (typeof action === \"function\") {\n\t\t\t\taction();\n\t\t\t}\n\t\t\tthis.runScheduled = false;\n\t\t\tlet iterations = 0;\n\t\t\twhile (!this.valid) {\n\t\t\t\tthis.valid = true;\n\t\t\t\tif (iterations > maxIterations) {\n\t\t\t\t\tthrow new Error(\"Max iterations exceeded!\");\n\t\t\t\t}\n\t\t\t\titerations++;\n\t\t\t\tthis.reactions.forEach(updatable => updatable());\n\t\t\t}\n\t\t\ttypeof this.onAfterRun === \"function\" && this.onAfterRun();\n\t\t}\n\t\tfinally {\n\t\t\tthis.inRunSection = false;\n\t\t}\n\t}\n\t/**\n\t* Запускает все {@link UpdatableFunction} которые помечены как невалидные\n\t* В отличии от метода {@link run} запускает их не сразу а по указанному таймауту\n\t*\n\t* @param {Function} [action] Изменения {@link Observable} выполняемые внутри\n\t* вызова этой функции не будут вызывать неотложный запуск реакций.\n\t* Реакции будут запускатся после заданного таймаута\n\t* @param {Number} [timeout=0] Таймаут запуска выполнения очереди зарегестрированых реакций\n\t*/\n\trunDeferred (action) {\n\t\tif (!this.options.enabled) {\n\t\t\treturn;\n\t\t}\n\t\tthis.inRunSection = true;\n\t\ttry {\n\t\t\tif (!this.runScheduled) {\n\t\t\t\tthis.runScheduled = setTimeout(() => this.run());\n\t\t\t}\n\t\t\tif (typeof action === \"function\") {\n\t\t\t\taction();\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\tthis.inRunSection = false;\n\t\t}\n\t}\n}\n\nManager.default = new Manager();\nManager.default.Manager = Manager;\n\nexport default Manager.default;\nexport const observable = Manager.default.observable;\nexport const reaction = Manager.default.reaction;\nexport const computed = Manager.default.computed;\nexport const updatable = Manager.default.updatable;\n\n/**\n * @typedef ManagerOptions\n * @name ManagerOptions\n * @type {Object}\n * @property {Boolean} immediateReaction\n * Запускать реакции сразу после изменения\n * данных (по-умолчанию false - т.е. реакции выполняются по нулевому таймауту)\n * @property {Boolean} enabled - Активен ли менеджер данных (по-умолчнию true)\n */\n\n /**\n  * @typedef ReactionHandler\n  * @name ReactionHandler\n  * @type {Object}\n  * @property {Function} unregister - Удалить реакцию из списка зарегестрированных реакций\n  * @property {UpdatableFunction} reaction - Фунция реакции\n  */\n\n /**\n  * @typedef Observable\n  * @name Observable\n  * @description Обьект или массив доступ к свойствам которого отслеживается.\n  * При доступе к дочерним объектам или массивам также возвращается {@link Observable} объект\n  */\n\n/**\n * @typedef UpdatableFunction\n * @name UpdatableFunction\n * @description Функция которая кеширует результат своего выполнение и хранит состояние валидности результата\n *\n * При изменении {@link Observable} данных которые были использованы при вычилении этой функции ее кеш инвалидируется\n *\n * Внутри {@link UpdatableFunction} разрешено только чтение {@link Observable}, при записи будет брошено исключение\n *\n * Если внутри таких функций есть перекрестные ссылки то вычисление производится не будет, будет возвращено `undefined`\n */\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = require(\"./index.js\").default;\n\n\n\n// WEBPACK FOOTER //\n// ./src/cjs-entry.js"],"sourceRoot":""}