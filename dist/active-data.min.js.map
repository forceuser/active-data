{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///active-data.min.js","webpack:///webpack/bootstrap 604eed8bf379daa1d72b?eb6a","webpack:///./src/index.js?9552","webpack:///./src/cjs-entry.js?112a"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","_toConsumableArray","arr","Array","isArray","arr2","length","from","_classCallCheck","instance","Constructor","TypeError","Manager","_createClass","defineProperties","target","props","descriptor","writable","key","protoProps","staticProps","options","$isObservableSymbol","Symbol","$registerRead","$dataSource","observables","WeakMap","cache","enabled","immediateReaction","callStack","reactions","setOptions","arguments","undefined","assign","makeObservable","dataSource","manager","isObservable","observable","toUpdate","Map","invalidateDeps","record","valid","deps","forEach","clear","registerRead","protoParents","initParentData","initialized","console","log","updates","parentData","protoPos","Set","add","set","isRoot","JSON","stringify","records","proto","getPrototypeOf","_protoParents","observableProto","push","concat","Proxy","obj","val","Error","values","invalidate","has","delete","inRunSection","run","runDeferred","makeUpdatable","cacheByObject","computing","warn","context","pop","makeComputed","callOnGet","callOnSet","makeReaction","updatable","unregister","idx","indexOf","splice","reaction","action","runScheduled","onAfterRun","_this","setTimeout","default"],"mappings":"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","file":"active-data.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"activeData\"] = factory();\n\telse\n\t\troot[\"activeData\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"activeData\"] = factory();\n\telse\n\t\troot[\"activeData\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Manager\", function() { return Manager; });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n* Реактивный менеджер данных, следящий за изменениями данных и выполняющий действия в ответ на эти изменения\n* Отслеживание происходит лениво, данные обновляются только когда они требуются\n*\n* @param {ManagerOptions} [options] Настройки менеджера\n*/\nvar Manager = function () {\n\tfunction Manager(options) {\n\t\t_classCallCheck(this, Manager);\n\n\t\tthis.$isObservableSymbol = Symbol(\"isObservable\");\n\t\tthis.$registerRead = Symbol(\"registerRead\");\n\t\tthis.$dataSource = Symbol(\"dataSource\");\n\t\tthis.observables = new WeakMap();\n\t\tthis.cache = new WeakMap();\n\t\tthis.options = {\n\t\t\tenabled: true,\n\t\t\timmediateReaction: false\n\t\t};\n\t\tthis.callStack = [];\n\t\tthis.reactions = [];\n\t\tthis.setOptions(options);\n\t}\n\t/**\n * Динамически устанавливает настройки работы менеджера данных\n *\n * @param {ManagerOptions} [options] Настройки менеджера\n */\n\n\n\t_createClass(Manager, [{\n\t\tkey: \"setOptions\",\n\t\tvalue: function setOptions() {\n\t\t\tvar options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n\t\t\tthis.options = Object.assign(this.options, options);\n\t\t}\n\t\t/**\n  * Создает {@link Observable} объект для указанного источника данный\n  *\n  * @param {(Object|Array)} dataSource источник данных\n  * @return {Observable} отслеживаемый объект\n  */\n\n\t}, {\n\t\tkey: \"makeObservable\",\n\t\tvalue: function makeObservable(dataSource) {\n\t\t\tvar manager = this;\n\t\t\tif (!dataSource) {\n\t\t\t\treturn dataSource;\n\t\t\t}\n\t\t\tif (this.isObservable(dataSource)) {\n\t\t\t\treturn dataSource;\n\t\t\t}\n\t\t\tvar observable = manager.observables.get(dataSource);\n\t\t\tif (!observable) {\n\t\t\t\tvar toUpdate = new Map();\n\t\t\t\tvar invalidateDeps = function invalidateDeps(record) {\n\t\t\t\t\trecord.valid = false;\n\t\t\t\t\trecord.deps.forEach(function (record) {\n\t\t\t\t\t\treturn invalidateDeps(record);\n\t\t\t\t\t});\n\t\t\t\t\trecord.deps.clear();\n\t\t\t\t};\n\n\t\t\t\tvar registerRead = function registerRead(record, key, protoParents) {\n\t\t\t\t\tvar updates = toUpdate.get(key);\n\t\t\t\t\tif (!updates) {\n\t\t\t\t\t\tupdates = { records: new Set() };\n\t\t\t\t\t\ttoUpdate.set(key, updates);\n\t\t\t\t\t}\n\t\t\t\t\tupdates.records.add(record);\n\t\t\t\t\tvar isRoot = !protoParents;\n\t\t\t\t\tfunction initParentData() {\n\t\t\t\t\t\tinitParentData.initialized = true;\n\t\t\t\t\t\tconsole.log(\"updates.parentData\", updates, updates.parentData);\n\t\t\t\t\t\tif (updates.parentData == null) {\n\t\t\t\t\t\t\tupdates.parentData = new Map();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar parentData = updates.parentData.get(record);\n\t\t\t\t\t\tconsole.log(\"parentData REC\", record, parentData);\n\t\t\t\t\t\tif (parentData == null) {\n\t\t\t\t\t\t\tparentData = { protoParents: protoParents, protoPos: new Set() };\n\t\t\t\t\t\t\tparentData.protoPos.add(0);\n\t\t\t\t\t\t\tupdates.parentData.set(record, parentData);\n\t\t\t\t\t\t} else if (parentData.protoParents.length < protoParents.length) {\n\t\t\t\t\t\t\tparentData.protoParents = protoParents;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (isRoot) {\n\t\t\t\t\t\t\tparentData.protoPos.add(protoParents.length - 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconsole.log(\"regiter read\", dataSource, key, JSON.stringify(parentData.protoParents), JSON.stringify(Array.from(parentData.protoPos)));\n\t\t\t\t\t}\n\n\t\t\t\t\tvar proto = Object.getPrototypeOf(dataSource);\n\n\t\t\t\t\tif (!protoParents) {\n\t\t\t\t\t\tprotoParents = [dataSource];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tinitParentData();\n\t\t\t\t\t}\n\n\t\t\t\t\tvar _protoParents = [].concat(_toConsumableArray(protoParents));\n\t\t\t\t\twhile (proto != null) {\n\t\t\t\t\t\tvar observableProto = manager.observables.get(proto);\n\t\t\t\t\t\t_protoParents.push(proto);\n\t\t\t\t\t\tif (observableProto != null) {\n\t\t\t\t\t\t\t// if (!initParentData.initialized) {\n\t\t\t\t\t\t\t// \tinitParentData();\n\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\tconsole.log(\"is observable proto\");\n\t\t\t\t\t\t\tobservableProto[manager.$registerRead](record, key, [].concat(_toConsumableArray(_protoParents)));\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tproto = Object.getPrototypeOf(proto);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tobservable = new Proxy(dataSource, {\n\t\t\t\t\tget: function get(obj, key) {\n\t\t\t\t\t\tif (key === manager.$isObservableSymbol) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (manager.callStack.length) {\n\t\t\t\t\t\t\tif (key === manager.$registerRead) {\n\t\t\t\t\t\t\t\treturn registerRead;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tregisterRead(manager.callStack[manager.callStack.length - 1].record, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar val = obj[key];\n\t\t\t\t\t\tif (val === Object(val) && typeof val !== \"function\") {\n\t\t\t\t\t\t\treturn manager.makeObservable(val);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn val;\n\t\t\t\t\t},\n\t\t\t\t\tset: function set(obj, key, val) {\n\t\t\t\t\t\tif (manager.callStack && manager.callStack.length) {\n\t\t\t\t\t\t\tthrow new Error(\"Changing observable objects is restricted inside computed properties and reaction functions!\");\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (val !== obj[key] || Array.isArray(obj) && key === \"length\") {\n\t\t\t\t\t\t\tobj[key] = val;\n\t\t\t\t\t\t\tvar updates = toUpdate.get(key);\n\t\t\t\t\t\t\tif (updates) {\n\t\t\t\t\t\t\t\tif (updates.parentData) {\n\t\t\t\t\t\t\t\t\tupdates.records.forEach(function (record) {\n\t\t\t\t\t\t\t\t\t\tvar parentData = updates.parentData.get(record);\n\t\t\t\t\t\t\t\t\t\tconsole.log(\"PARENT DATA\", obj, key, JSON.stringify(parentData.protoParents), JSON.stringify(Array.from(parentData.protoPos.values())));\n\t\t\t\t\t\t\t\t\t\tvar invalidate = true;\n\t\t\t\t\t\t\t\t\t\tvar l = parentData.protoParents.length - 2;\n\t\t\t\t\t\t\t\t\t\t// let d = parentData.protoParents.indexOf(obj);\n\t\t\t\t\t\t\t\t\t\tfor (var i = l; i >= 0; i--) {\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"go go\", i, l);\n\t\t\t\t\t\t\t\t\t\t\tif (parentData.protoPos.has(i)) {\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t} else if (parentData.protoParents[i].hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\t\t\t\t\tinvalidate = false;\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"+++++DO NOT INVALIDATE\");\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif (invalidate) {\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"+++++INVALIDATE\");\n\t\t\t\t\t\t\t\t\t\t\tinvalidateDeps(record);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tconsole.log(\"+++++INVALIDATE BASIC\");\n\t\t\t\t\t\t\t\t\tupdates.records.forEach(function (record) {\n\t\t\t\t\t\t\t\t\t\treturn invalidateDeps(record);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\ttoUpdate.delete(key);\n\t\t\t\t\t\t\tif (!manager.inRunSection) {\n\t\t\t\t\t\t\t\tif (manager.options.immediateReaction) {\n\t\t\t\t\t\t\t\t\tmanager.run();\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tmanager.runDeferred();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tmanager.observables.set(dataSource, observable);\n\t\t\t}\n\t\t\treturn observable;\n\t\t}\n\t\t/**\n  * Создает {@link UpdatableFunction}\n  * Используется в основном для внутренних целей\n  *\n  * @param {Function} call Функция для которой будет создана {@link UpdatableFunction}\n  * @param {Object} obj Если `call` это метод объекта необходимо указать связанный объект\n  * @return {UpdatableFunction}\n  */\n\n\t}, {\n\t\tkey: \"makeUpdatable\",\n\t\tvalue: function makeUpdatable(call) {\n\t\t\tvar obj = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n\t\t\tvar manager = this;\n\t\t\tif (obj == null) {\n\t\t\t\tobj = manager;\n\t\t\t}\n\t\t\treturn function () {\n\t\t\t\tvar cacheByObject = manager.cache.get(obj);\n\t\t\t\tvar record = void 0;\n\t\t\t\tif (cacheByObject) {\n\t\t\t\t\trecord = cacheByObject.get(call);\n\t\t\t\t} else {\n\t\t\t\t\tcacheByObject = new Map();\n\t\t\t\t\tmanager.cache.set(obj, cacheByObject);\n\t\t\t\t}\n\n\t\t\t\tif (!record) {\n\t\t\t\t\trecord = { valid: false, value: undefined, deps: new Set() };\n\t\t\t\t\tcacheByObject.set(call, record);\n\t\t\t\t}\n\t\t\t\tif (record.computing) {\n\t\t\t\t\tconsole.warn(\"Detected cross reference inside computed properties! undefined will be returned to prevent infinite loop\");\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\tif (manager.callStack.length) {\n\t\t\t\t\trecord.deps.add(manager.callStack[manager.callStack.length - 1].record);\n\t\t\t\t}\n\n\t\t\t\tif (record.valid) {\n\t\t\t\t\treturn record.value;\n\t\t\t\t}\n\t\t\t\trecord.computing = true;\n\t\t\t\tmanager.callStack.push({ obj: obj, call: call, record: record });\n\t\t\t\ttry {\n\t\t\t\t\tvar context = void 0;\n\t\t\t\t\tif (this) {\n\t\t\t\t\t\tcontext = manager.observables.get(this);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontext = manager;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar value = call.call(context, context);\n\t\t\t\t\trecord.valid = true;\n\t\t\t\t\trecord.value = value;\n\t\t\t\t\treturn value;\n\t\t\t\t} finally {\n\t\t\t\t\trecord.computing = false;\n\t\t\t\t\tmanager.callStack.pop();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\t/**\n  * Создает вычисляемое свойство объекта\n  *\n  * @param {Object} obj Объект для которого будет создано вычисляемое свойство\n  * @param {String} key Имя вычисляемого свойства свойства\n  * @param {Function} callOnGet Функция которая будет вычислятся при доступе к свойству\n  * @param {Function} [callOnSet] Функция которая будет выполнятся при установке значения свойства\n  */\n\n\t}, {\n\t\tkey: \"makeComputed\",\n\t\tvalue: function makeComputed(obj, key, callOnGet, callOnSet) {\n\t\t\tObject.defineProperty(obj, key, {\n\t\t\t\tenumerable: true,\n\t\t\t\tget: this.makeUpdatable(callOnGet, obj),\n\t\t\t\tset: callOnSet\n\t\t\t});\n\t\t}\n\t\t/**\n  * Создает {@link UpdatableFunction} и помещает ее в список для проверки\n  * на валидность при изменении данных. Менеджер автозапускает эту\n  * функцию если ее результат стал невалидным\n  *\n  * @param {Function} call\n  *\tФункция для которой будет создана {@link UpdatableFunction}\n  *\tОна будет автозапускатся при изменении {@link Observable} данных использованых при ее вычислении\n  * @param {Boolean} run\n  *\tВыполнить первый запуск реации после ее регистрации.\n  *\tВ зависимости от указанной опции {@link ManagerOptions.immediateReaction}\n  *\tбудет запускатся либо сразу либо по таймауту.\n  *\tЕсли {@link ManagerOptions.enabled} == false то реакция не будет выполнятся даже при установленном параметре run\n  * @return {ReactionHandler} Управляющий объект для зарегестрированной реакции\n  */\n\n\t}, {\n\t\tkey: \"makeReaction\",\n\t\tvalue: function makeReaction(call) {\n\t\t\tvar run = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n\t\t\tvar manager = this;\n\t\t\tvar updatable = this.makeUpdatable(call);\n\t\t\tmanager.reactions.push(updatable);\n\t\t\tif (run) {\n\t\t\t\tif (this.options.immediateReaction) {\n\t\t\t\t\tmanager.run();\n\t\t\t\t} else {\n\t\t\t\t\tmanager.runDeferred();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tunregister: function unregister() {\n\t\t\t\t\tvar idx = manager.reactions.indexOf(updatable);\n\t\t\t\t\tif (idx >= 0) {\n\t\t\t\t\t\tmanager.reactions.splice(idx, 1);\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\treaction: updatable\n\t\t\t};\n\t\t}\n\n\t\t/**\n  * Проверяет является ли объект наблюдаемым\n  *\n  * @param {(Observable|Object|Array)} obj\n  */\n\n\t}, {\n\t\tkey: \"isObservable\",\n\t\tvalue: function isObservable(obj) {\n\t\t\treturn obj[this.$isObservableSymbol] === true;\n\t\t}\n\t\t/**\n  * Запускает все автозапускаемые функции которые помечены как невалидные\n  *\n  * @param {Function} [action]\n  *\tДействия выполняемые внутри вызова этой функции\n  * \tне будут вызывать неотложный запуск реакций.\n  * \tРеакции будут запущены только после выхода из функции action\n  */\n\n\t}, {\n\t\tkey: \"run\",\n\t\tvalue: function run(action) {\n\t\t\tif (!this.options.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.inRunSection = true;\n\t\t\ttry {\n\t\t\t\tif (typeof action === \"function\") {\n\t\t\t\t\taction();\n\t\t\t\t}\n\t\t\t\tthis.runScheduled = false;\n\t\t\t\tthis.reactions.forEach(function (updatable) {\n\t\t\t\t\treturn updatable();\n\t\t\t\t});\n\t\t\t\ttypeof this.onAfterRun === \"function\" && this.onAfterRun();\n\t\t\t} finally {\n\t\t\t\tthis.inRunSection = false;\n\t\t\t}\n\t\t}\n\t\t/**\n  * Запускает все {@link UpdatableFunction} которые помечены как невалидные\n  * В отличии от метода {@link run} запускает их не сразу а по указанному таймауту\n  *\n  * @param {Function} [action] Изменения {@link Observable} выполняемые внутри вызова этой функции не будут вызывать неотложный запуск реакций. Реакции будут запускатся после заданного таймаута\n  * @param {Number} [timeout=0] Таймаут запуска выполнения очереди зарегестрированых реакций\n  */\n\n\t}, {\n\t\tkey: \"runDeferred\",\n\t\tvalue: function runDeferred(action) {\n\t\t\tvar _this = this;\n\n\t\t\tif (!this.options.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.inRunSection = true;\n\t\t\ttry {\n\t\t\t\tif (!this.runScheduled) {\n\t\t\t\t\tthis.runScheduled = setTimeout(function () {\n\t\t\t\t\t\treturn _this.run();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tif (typeof action === \"function\") {\n\t\t\t\t\taction();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tthis.inRunSection = false;\n\t\t\t}\n\t\t}\n\t}]);\n\n\treturn Manager;\n}();\n\nManager.default = new Manager();\nManager.default.Manager = Manager;\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Manager.default);\n\n/**\n * @typedef ManagerOptions\n * @name ManagerOptions\n * @type {Object}\n * @property {Boolean} immediateReaction - Запускать реакции сразу после изменения данных (по-умолчанию false - т.е. реакции выполняются по нулевому таймауту)\n * @property {Boolean} enabled - Активен ли менеджер данных (по-умолчнию true)\n */\n\n/**\n * @typedef ReactionHandler\n * @name ReactionHandler\n * @type {Object}\n * @property {Function} unregister - Удалить реакцию из списка зарегестрированных реакций\n * @property {UpdatableFunction} reaction - Фунция реакции\n */\n\n/**\n * @typedef Observable\n * @name Observable\n * @description Обьект или массив доступ к свойствам которого отслеживается.\n * При доступе к дочерним объектам или массивам также возвращается {@link Observable} объект\n */\n\n/**\n * @typedef UpdatableFunction\n * @name UpdatableFunction\n * @description Функция которая кеширует результат своего выполнение и хранит состояние валидности результата\n *\n * При изменении {@link Observable} данных которые были использованы при вычилении этой функции ее кеш инвалидируется\n *\n * Внутри {@link UpdatableFunction} разрешено только чтение {@link Observable}, при записи будет брошено исключение\n *\n * Если внутри таких функций есть перекрестные ссылки то вычисление производится не будет, будет возвращено `undefined`\n */\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(0).default;\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// active-data.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 604eed8bf379daa1d72b","/**\n* Реактивный менеджер данных, следящий за изменениями данных и выполняющий действия в ответ на эти изменения\n* Отслеживание происходит лениво, данные обновляются только когда они требуются\n*\n* @param {ManagerOptions} [options] Настройки менеджера\n*/\nexport class Manager {\n\tconstructor (options) {\n\t\tthis.$isObservableSymbol = Symbol(\"isObservable\");\n\t\tthis.$registerRead = Symbol(\"registerRead\");\n\t\tthis.$dataSource = Symbol(\"dataSource\");\n\t\tthis.observables = new WeakMap();\n\t\tthis.cache = new WeakMap();\n\t\tthis.options = {\n\t\t\tenabled: true,\n\t\t\timmediateReaction: false\n\t\t};\n\t\tthis.callStack = [];\n\t\tthis.reactions = [];\n\t\tthis.setOptions(options);\n\t}\n\t/**\n\t* Динамически устанавливает настройки работы менеджера данных\n\t*\n\t* @param {ManagerOptions} [options] Настройки менеджера\n\t*/\n\tsetOptions (options = {}) {\n\t\tthis.options = Object.assign(this.options, options);\n\t}\n\t/**\n\t* Создает {@link Observable} объект для указанного источника данный\n\t*\n\t* @param {(Object|Array)} dataSource источник данных\n\t* @return {Observable} отслеживаемый объект\n\t*/\n\tmakeObservable (dataSource) {\n\t\tconst manager = this;\n\t\tif (!dataSource) {\n\t\t\treturn dataSource;\n\t\t}\n\t\tif (this.isObservable(dataSource)) {\n\t\t\treturn dataSource;\n\t\t}\n\t\tlet observable = manager.observables.get(dataSource);\n\t\tif (!observable) {\n\t\t\tconst toUpdate = new Map();\n\t\t\tconst invalidateDeps = (record) => {\n\t\t\t\trecord.valid = false;\n\t\t\t\trecord.deps.forEach(record => invalidateDeps(record));\n\t\t\t\trecord.deps.clear();\n\t\t\t};\n\n\n\t\t\tconst registerRead = (record, key, protoParents) => {\n\t\t\t\tlet updates = toUpdate.get(key);\n\t\t\t\tif (!updates) {\n\t\t\t\t\tupdates = {records: new Set()};\n\t\t\t\t\ttoUpdate.set(key, updates);\n\t\t\t\t}\n\t\t\t\tupdates.records.add(record);\n\t\t\t\tconst isRoot = !protoParents;\n\t\t\t\tfunction initParentData () {\n\t\t\t\t\tinitParentData.initialized = true;\n\t\t\t\t\tconsole.log(\"updates.parentData\", updates, updates.parentData);\n\t\t\t\t\tif (updates.parentData == null) {\n\t\t\t\t\t\tupdates.parentData = new Map();\n\t\t\t\t\t}\n\t\t\t\t\tlet parentData = updates.parentData.get(record);\n\t\t\t\t\tconsole.log(\"parentData REC\", record, parentData);\n\t\t\t\t\tif (parentData == null) {\n\t\t\t\t\t\tparentData = {protoParents, protoPos: new Set()};\n\t\t\t\t\t\tparentData.protoPos.add(0);\n\t\t\t\t\t\tupdates.parentData.set(record, parentData);\n\t\t\t\t\t}\n\t\t\t\t\telse if (parentData.protoParents.length < protoParents.length) {\n\t\t\t\t\t\tparentData.protoParents = protoParents;\n\t\t\t\t\t}\n\t\t\t\t\tif (isRoot) {\n\t\t\t\t\t\tparentData.protoPos.add(protoParents.length - 1);\n\t\t\t\t\t}\n\t\t\t\t\tconsole.log(\"regiter read\", dataSource, key, JSON.stringify(parentData.protoParents), JSON.stringify(Array.from(parentData.protoPos)));\n\t\t\t\t}\n\n\t\t\t\tlet proto = Object.getPrototypeOf(dataSource);\n\n\n\t\t\t\tif (!protoParents) {\n\t\t\t\t\tprotoParents = [dataSource];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tinitParentData();\n\t\t\t\t}\n\n\t\t\t\tlet _protoParents = [...protoParents];\n\t\t\t\twhile (proto != null) {\n\t\t\t\t\tconst observableProto = manager.observables.get(proto);\n\t\t\t\t\t_protoParents.push(proto);\n\t\t\t\t\tif (observableProto != null) {\n\t\t\t\t\t\t// if (!initParentData.initialized) {\n\t\t\t\t\t\t// \tinitParentData();\n\t\t\t\t\t\t// }\n\t\t\t\t\t\tconsole.log(\"is observable proto\");\n\t\t\t\t\t\tobservableProto[manager.$registerRead](record, key, [..._protoParents]);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tproto = Object.getPrototypeOf(proto);\n\t\t\t\t}\n\t\t\t};\n\n\n\t\t\tobservable = new Proxy(dataSource, {\n\t\t\t\tget: (obj, key) => {\n\t\t\t\t\tif (key === manager.$isObservableSymbol) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (manager.callStack.length) {\n\t\t\t\t\t\tif (key === manager.$registerRead) {\n\t\t\t\t\t\t\treturn registerRead;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tregisterRead(manager.callStack[manager.callStack.length - 1].record, key);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst val = obj[key];\n\t\t\t\t\tif (val === Object(val) && typeof val !== \"function\") {\n\t\t\t\t\t\treturn manager.makeObservable(val);\n\t\t\t\t\t}\n\t\t\t\t\treturn val;\n\t\t\t\t},\n\t\t\t\tset: (obj, key, val) => {\n\t\t\t\t\tif (manager.callStack && manager.callStack.length) {\n\t\t\t\t\t\tthrow new Error(\"Changing observable objects is restricted inside computed properties and reaction functions!\");\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif (val !== obj[key] || (Array.isArray(obj) && key === \"length\")) {\n\t\t\t\t\t\tobj[key] = val;\n\t\t\t\t\t\tconst updates = toUpdate.get(key);\n\t\t\t\t\t\tif (updates) {\n\t\t\t\t\t\t\tif (updates.parentData) {\n\t\t\t\t\t\t\t\tupdates.records.forEach((record) => {\n\t\t\t\t\t\t\t\t\tlet parentData = updates.parentData.get(record);\n\t\t\t\t\t\t\t\t\tconsole.log(\"PARENT DATA\", obj, key,\n\t\t\t\t\t\t\t\t\t\tJSON.stringify(parentData.protoParents),\n\t\t\t\t\t\t\t\t\t\tJSON.stringify(Array.from(parentData.protoPos.values()))\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tlet invalidate = true;\n\t\t\t\t\t\t\t\t\tlet l = parentData.protoParents.length - 2;\n\t\t\t\t\t\t\t\t\t// let d = parentData.protoParents.indexOf(obj);\n\t\t\t\t\t\t\t\t\tfor (let i = l; i >= 0; i--) {\n\t\t\t\t\t\t\t\t\t\tconsole.log(\"go go\", i, l);\n\t\t\t\t\t\t\t\t\t\tif (parentData.protoPos.has(i)) {\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse if (parentData.protoParents[i].hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\t\t\t\tinvalidate = false;\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"+++++DO NOT INVALIDATE\");\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (invalidate) {\n\t\t\t\t\t\t\t\t\t\tconsole.log(\"+++++INVALIDATE\");\n\t\t\t\t\t\t\t\t\t\tinvalidateDeps(record);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tconsole.log(\"+++++INVALIDATE BASIC\");\n\t\t\t\t\t\t\t\tupdates.records.forEach((record) => invalidateDeps(record));\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttoUpdate.delete(key);\n\t\t\t\t\t\tif (!manager.inRunSection) {\n\t\t\t\t\t\t\tif (manager.options.immediateReaction) {\n\t\t\t\t\t\t\t\tmanager.run();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tmanager.runDeferred();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t\tmanager.observables.set(dataSource, observable);\n\t\t}\n\t\treturn observable;\n\t}\n\t/**\n\t* Создает {@link UpdatableFunction}\n\t* Используется в основном для внутренних целей\n\t*\n\t* @param {Function} call Функция для которой будет создана {@link UpdatableFunction}\n\t* @param {Object} obj Если `call` это метод объекта необходимо указать связанный объект\n\t* @return {UpdatableFunction}\n\t*/\n\tmakeUpdatable (call, obj = null) {\n\t\tconst manager = this;\n\t\tif (obj == null) {\n\t\t\tobj = manager;\n\t\t}\n\t\treturn function () {\n\t\t\tlet cacheByObject = manager.cache.get(obj);\n\t\t\tlet record;\n\t\t\tif (cacheByObject) {\n\t\t\t\trecord = cacheByObject.get(call);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcacheByObject = new Map();\n\t\t\t\tmanager.cache.set(obj, cacheByObject);\n\t\t\t}\n\n\t\t\tif (!record) {\n\t\t\t\trecord = {valid: false, value: undefined, deps: new Set()};\n\t\t\t\tcacheByObject.set(call, record);\n\t\t\t}\n\t\t\tif (record.computing) {\n\t\t\t\tconsole.warn(\"Detected cross reference inside computed properties! undefined will be returned to prevent infinite loop\");\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tif (manager.callStack.length) {\n\t\t\t\trecord.deps.add(manager.callStack[manager.callStack.length - 1].record);\n\t\t\t}\n\n\t\t\tif (record.valid) {\n\t\t\t\treturn record.value;\n\t\t\t}\n\t\t\trecord.computing = true;\n\t\t\tmanager.callStack.push({obj, call, record});\n\t\t\ttry {\n\t\t\t\tlet context;\n\t\t\t\tif (this) {\n\t\t\t\t\tcontext = manager.observables.get(this);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcontext = manager;\n\t\t\t\t}\n\n\t\t\t\tconst value = call.call(context, context);\n\t\t\t\trecord.valid = true;\n\t\t\t\trecord.value = value;\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tfinally {\n\t\t\t\trecord.computing = false;\n\t\t\t\tmanager.callStack.pop();\n\t\t\t}\n\t\t};\n\t}\n\t/**\n\t* Создает вычисляемое свойство объекта\n\t*\n\t* @param {Object} obj Объект для которого будет создано вычисляемое свойство\n\t* @param {String} key Имя вычисляемого свойства свойства\n\t* @param {Function} callOnGet Функция которая будет вычислятся при доступе к свойству\n\t* @param {Function} [callOnSet] Функция которая будет выполнятся при установке значения свойства\n\t*/\n\tmakeComputed (obj, key, callOnGet, callOnSet) {\n\t\tObject.defineProperty(obj, key, {\n\t\t\tenumerable: true,\n\t\t\tget: this.makeUpdatable(callOnGet, obj),\n\t\t\tset: callOnSet\n\t\t});\n\t}\n\t/**\n\t* Создает {@link UpdatableFunction} и помещает ее в список для проверки\n\t* на валидность при изменении данных. Менеджер автозапускает эту\n\t* функцию если ее результат стал невалидным\n\t*\n\t* @param {Function} call\n\t*\tФункция для которой будет создана {@link UpdatableFunction}\n\t*\tОна будет автозапускатся при изменении {@link Observable} данных использованых при ее вычислении\n\t* @param {Boolean} run\n\t*\tВыполнить первый запуск реации после ее регистрации.\n\t*\tВ зависимости от указанной опции {@link ManagerOptions.immediateReaction}\n\t*\tбудет запускатся либо сразу либо по таймауту.\n\t*\tЕсли {@link ManagerOptions.enabled} == false то реакция не будет выполнятся даже при установленном параметре run\n\t* @return {ReactionHandler} Управляющий объект для зарегестрированной реакции\n\t*/\n\tmakeReaction (call, run = true) {\n\t\tconst manager = this;\n\t\tconst updatable = this.makeUpdatable(call);\n\t\tmanager.reactions.push(updatable);\n\t\tif (run) {\n\t\t\tif (this.options.immediateReaction) {\n\t\t\t\tmanager.run();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmanager.runDeferred();\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\tunregister () {\n\t\t\t\tconst idx = manager.reactions.indexOf(updatable);\n\t\t\t\tif (idx >= 0) {\n\t\t\t\t\tmanager.reactions.splice(idx, 1);\n\t\t\t\t}\n\t\t\t},\n\t\t\treaction: updatable\n\t\t};\n\t}\n\n\t/**\n\t* Проверяет является ли объект наблюдаемым\n\t*\n\t* @param {(Observable|Object|Array)} obj\n\t*/\n\tisObservable (obj) {\n\t\treturn obj[this.$isObservableSymbol] === true;\n\t}\n\t/**\n\t* Запускает все автозапускаемые функции которые помечены как невалидные\n\t*\n\t* @param {Function} [action]\n\t*\tДействия выполняемые внутри вызова этой функции\n\t* \tне будут вызывать неотложный запуск реакций.\n\t* \tРеакции будут запущены только после выхода из функции action\n\t*/\n\trun (action) {\n\t\tif (!this.options.enabled) {\n\t\t\treturn;\n\t\t}\n\t\tthis.inRunSection = true;\n\t\ttry {\n\t\t\tif (typeof action === \"function\") {\n\t\t\t\taction();\n\t\t\t}\n\t\t\tthis.runScheduled = false;\n\t\t\tthis.reactions.forEach(updatable => updatable());\n\t\t\ttypeof this.onAfterRun === \"function\" && this.onAfterRun();\n\t\t}\n\t\tfinally {\n\t\t\tthis.inRunSection = false;\n\t\t}\n\t}\n\t/**\n\t* Запускает все {@link UpdatableFunction} которые помечены как невалидные\n\t* В отличии от метода {@link run} запускает их не сразу а по указанному таймауту\n\t*\n\t* @param {Function} [action] Изменения {@link Observable} выполняемые внутри вызова этой функции не будут вызывать неотложный запуск реакций. Реакции будут запускатся после заданного таймаута\n\t* @param {Number} [timeout=0] Таймаут запуска выполнения очереди зарегестрированых реакций\n\t*/\n\trunDeferred (action) {\n\t\tif (!this.options.enabled) {\n\t\t\treturn;\n\t\t}\n\t\tthis.inRunSection = true;\n\t\ttry {\n\t\t\tif (!this.runScheduled) {\n\t\t\t\tthis.runScheduled = setTimeout(() => this.run());\n\t\t\t}\n\t\t\tif (typeof action === \"function\") {\n\t\t\t\taction();\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\tthis.inRunSection = false;\n\t\t}\n\t}\n}\n\n\nManager.default = new Manager();\nManager.default.Manager = Manager;\n\nexport default Manager.default;\n\n/**\n * @typedef ManagerOptions\n * @name ManagerOptions\n * @type {Object}\n * @property {Boolean} immediateReaction - Запускать реакции сразу после изменения данных (по-умолчанию false - т.е. реакции выполняются по нулевому таймауту)\n * @property {Boolean} enabled - Активен ли менеджер данных (по-умолчнию true)\n */\n\n /**\n  * @typedef ReactionHandler\n  * @name ReactionHandler\n  * @type {Object}\n  * @property {Function} unregister - Удалить реакцию из списка зарегестрированных реакций\n  * @property {UpdatableFunction} reaction - Фунция реакции\n  */\n\n /**\n  * @typedef Observable\n  * @name Observable\n  * @description Обьект или массив доступ к свойствам которого отслеживается.\n  * При доступе к дочерним объектам или массивам также возвращается {@link Observable} объект\n  */\n\n/**\n * @typedef UpdatableFunction\n * @name UpdatableFunction\n * @description Функция которая кеширует результат своего выполнение и хранит состояние валидности результата\n *\n * При изменении {@link Observable} данных которые были использованы при вычилении этой функции ее кеш инвалидируется\n *\n * Внутри {@link UpdatableFunction} разрешено только чтение {@link Observable}, при записи будет брошено исключение\n *\n * Если внутри таких функций есть перекрестные ссылки то вычисление производится не будет, будет возвращено `undefined`\n */\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = require(\"./index.js\").default;\n\n\n\n// WEBPACK FOOTER //\n// ./src/cjs-entry.js"],"sourceRoot":""}